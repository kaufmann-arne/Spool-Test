{
  "contractName": "StakingApp",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract RWRDToken",
          "name": "_rwrdToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakingSlot",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "momentStaked",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedBalance",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "amountPayable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ethBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountEth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timeStaked",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "rwrdToken",
      "outputs": [
        {
          "internalType": "contract RWRDToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "TokenBalance",
      "outputs": [],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stakeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "unstakeETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract RWRDToken\",\"name\":\"_rwrdToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakingSlot\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"momentStaked\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedBalance\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TokenBalance\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"amountPayable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ethBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountEth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStaked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rwrdToken\",\"outputs\":[{\"internalType\":\"contract RWRDToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/StakingApp.sol\":\"StakingApp\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/RWRDToken.sol\":{\"keccak256\":\"0x417052000cb50ac26d5a028c08b55f2dcf05a02a249502a9f14253a7bc2cb5b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69a03e9e65fd7898a890daeed3688169b628b94cf2928882c6ba58d218cb09a4\",\"dweb:/ipfs/Qmc1GbRoozbqjsnkxrkGagQurgQyNkGZwhGb9hmutosYNG\"]},\"project:/contracts/StakingApp.sol\":{\"keccak256\":\"0xce83685e472d53abd9a3d1209fb8ed97652ca2665c69bf68b47805cd8ea7370e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fb64dff2837b6fc962a37375720f9465212560f47f6f385f42a35547ef8bb2\",\"dweb:/ipfs/QmQqW1vw1Y5DEN8crTioDLAwF1VYeddzaCHuEdwMtxoM8Q\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280601081526020017f5374616b696e6720436f6e74726163740000000000000000000000000000000081525060009080519060200190620000519291906200010e565b503480156200005f57600080fd5b5060405162001a3e38038062001a3e83398181016040528101906200008591906200023c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620002d3565b8280546200011c906200029d565b90600052602060002090601f0160209004810192826200014057600085556200018c565b82601f106200015b57805160ff19168380011785556200018c565b828001600101855582156200018c579182015b828111156200018b5782518255916020019190600101906200016e565b5b5090506200019b91906200019f565b5090565b5b80821115620001ba576000816000905550600101620001a0565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f082620001c3565b9050919050565b60006200020482620001e3565b9050919050565b6200021681620001f7565b81146200022257600080fd5b50565b60008151905062000236816200020b565b92915050565b600060208284031215620002555762000254620001be565b5b6000620002658482850162000225565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002b657607f821691505b60208210811415620002cd57620002cc6200026e565b5b50919050565b61175b80620002e36000396000f3fe6080604052600436106100a3576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100765780638da5cb5b14610131578063a85770591461015c578063a9bfe5c714610173578063dff83d751461018a578063facea6b1146101c7576100a3565b806306fdde03146100a857806348c54b9d146100d35780636ecc20da146100ea5780637fc3e6b214610106575b600080fd5b3480156100b457600080fd5b506100bd610205565b6040516100ca9190611031565b60405180910390f35b3480156100df57600080fd5b506100e8610293565b005b61010460048036038101906100ff919061108e565b610856565b005b34801561011257600080fd5b5061011b6109b9565b604051610128919061113a565b60405180910390f35b34801561013d57600080fd5b506101466109df565b6040516101539190611176565b60405180910390f35b34801561016857600080fd5b50610171610a05565b005b34801561017f57600080fd5b50610188610e62565b005b34801561019657600080fd5b506101b160048036038101906101ac91906111bd565b610f3f565b6040516101be91906111f9565b60405180910390f35b3480156101d357600080fd5b506101ee60048036038101906101e99190611214565b610f57565b6040516101fc929190611254565b60405180910390f35b60008054610212906112ac565b80601f016020809104026020016040519081016040528092919081815260200182805461023e906112ac565b801561028b5780601f106102605761010080835404028352916020019161028b565b820191906000526020600020905b81548152906001019060200180831161026e57829003601f168201915b505050505081565b60005b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156105df57600062015180600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610337576103366112de565b5b906000526020600020906002020160010154610353919061136b565b670de0b6b3a7640000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106103ad576103ac6112de565b5b9060005260206000209060020201600001546103c9919061136b565b6103d3919061139c565b11156105cc57600a62015180600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106104305761042f6112de565b5b90600052602060002090600202016001015461044c919061136b565b670de0b6b3a7640000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106104a6576104a56112de565b5b9060005260206000209060020201600001546104c2919061136b565b6104cc919061139c565b6104d6919061139c565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461052091906113f6565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106105b6576105b56112de565b5b9060005260206000209060020201600101819055505b80806105d79061144c565b915050610296565b506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610662576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610659906114e1565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161071a929190611501565b6020604051808303816000875af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190611562565b503373ffffffffffffffffffffffffffffffffffffffff167f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd987068600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610807929190611501565b60405180910390a26000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b80341461086257600080fd5b349050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052803481526020014281525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060004290503373ffffffffffffffffffffffffffffffffffffffff167f4b22ccaaeb4846ec98072623a51a9070bf1f01c75ac1f8119035f373df852a0c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050856040516109ad949392919061158f565b60405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090505b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610ada57600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610aa857610aa76112de565b5b90600052602060002090600202016000015482610ac591906113f6565b91508080610ad29061144c565b915050610a0d565b5060008111610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1590611620565b60405180910390fd5b60008060005b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610d3c5762093a80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610bc357610bc26112de565b5b9060005260206000209060020201600101541115610cb857600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610c2c57610c2b6112de565b5b90600052602060002090600202016000015483610c4991906113f6565b92506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c9e57610c9d6112de565b5b906000526020600020906002020160000181905550610d29565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610d0957610d086112de565b5b90600052602060002090600202016000015482610d2691906113f6565b91505b8080610d349061144c565b915050610b24565b5060008211610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d779061168c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610de8573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f18edd09e80386cd99df397e2e0d87d2bb259423eae08645e776321a36fe680ef600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484604051610e55939291906116ac565b60405180910390a2505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610efb9190611176565b602060405180830381865afa158015610f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3c91906116f8565b50565b60046020528060005260406000206000915090505481565b60036020528160005260406000208181548110610f7357600080fd5b9060005260206000209060020201600091509150508060000154908060010154905082565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fd2578082015181840152602081019050610fb7565b83811115610fe1576000848401525b50505050565b6000601f19601f8301169050919050565b600061100382610f98565b61100d8185610fa3565b935061101d818560208601610fb4565b61102681610fe7565b840191505092915050565b6000602082019050818103600083015261104b8184610ff8565b905092915050565b600080fd5b6000819050919050565b61106b81611058565b811461107657600080fd5b50565b60008135905061108881611062565b92915050565b6000602082840312156110a4576110a3611053565b5b60006110b284828501611079565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111006110fb6110f6846110bb565b6110db565b6110bb565b9050919050565b6000611112826110e5565b9050919050565b600061112482611107565b9050919050565b61113481611119565b82525050565b600060208201905061114f600083018461112b565b92915050565b6000611160826110bb565b9050919050565b61117081611155565b82525050565b600060208201905061118b6000830184611167565b92915050565b61119a81611155565b81146111a557600080fd5b50565b6000813590506111b781611191565b92915050565b6000602082840312156111d3576111d2611053565b5b60006111e1848285016111a8565b91505092915050565b6111f381611058565b82525050565b600060208201905061120e60008301846111ea565b92915050565b6000806040838503121561122b5761122a611053565b5b6000611239858286016111a8565b925050602061124a85828601611079565b9150509250929050565b600060408201905061126960008301856111ea565b61127660208301846111ea565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112c457607f821691505b602082108114156112d8576112d761127d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061137682611058565b915061138183611058565b9250826113915761139061130d565b5b828204905092915050565b60006113a782611058565b91506113b283611058565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113eb576113ea61133c565b5b828202905092915050565b600061140182611058565b915061140c83611058565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114415761144061133c565b5b828201905092915050565b600061145782611058565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561148a5761148961133c565b5b600182019050919050565b7f4e6f20546f6b656e7320746f20636c61696d0000000000000000000000000000600082015250565b60006114cb601283610fa3565b91506114d682611495565b602082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b60006040820190506115166000830185611167565b61152360208301846111ea565b9392505050565b60008115159050919050565b61153f8161152a565b811461154a57600080fd5b50565b60008151905061155c81611536565b92915050565b60006020828403121561157857611577611053565b5b60006115868482850161154d565b91505092915050565b60006080820190506115a46000830187611167565b6115b160208301866111ea565b6115be60408301856111ea565b6115cb60608301846111ea565b95945050505050565b7f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000600082015250565b600061160a601b83610fa3565b9150611615826115d4565b602082019050919050565b60006020820190508181036000830152611639816115fd565b9050919050565b7f6e6f20756e6c6f636b65642062616c616e636520796574000000000000000000600082015250565b6000611676601783610fa3565b915061168182611640565b602082019050919050565b600060208201905081810360008301526116a581611669565b9050919050565b60006060820190506116c16000830186611167565b6116ce60208301856111ea565b6116db60408301846111ea565b949350505050565b6000815190506116f281611062565b92915050565b60006020828403121561170e5761170d611053565b5b600061171c848285016116e3565b9150509291505056fea2646970667358221220a583d200dc0d3ebe001cb673fddce7a77da94c831d48f652ad33ff94b32ce18064736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106100a3576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100765780638da5cb5b14610131578063a85770591461015c578063a9bfe5c714610173578063dff83d751461018a578063facea6b1146101c7576100a3565b806306fdde03146100a857806348c54b9d146100d35780636ecc20da146100ea5780637fc3e6b214610106575b600080fd5b3480156100b457600080fd5b506100bd610205565b6040516100ca9190611031565b60405180910390f35b3480156100df57600080fd5b506100e8610293565b005b61010460048036038101906100ff919061108e565b610856565b005b34801561011257600080fd5b5061011b6109b9565b604051610128919061113a565b60405180910390f35b34801561013d57600080fd5b506101466109df565b6040516101539190611176565b60405180910390f35b34801561016857600080fd5b50610171610a05565b005b34801561017f57600080fd5b50610188610e62565b005b34801561019657600080fd5b506101b160048036038101906101ac91906111bd565b610f3f565b6040516101be91906111f9565b60405180910390f35b3480156101d357600080fd5b506101ee60048036038101906101e99190611214565b610f57565b6040516101fc929190611254565b60405180910390f35b60008054610212906112ac565b80601f016020809104026020016040519081016040528092919081815260200182805461023e906112ac565b801561028b5780601f106102605761010080835404028352916020019161028b565b820191906000526020600020905b81548152906001019060200180831161026e57829003601f168201915b505050505081565b60005b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110156105df57600062015180600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610337576103366112de565b5b906000526020600020906002020160010154610353919061136b565b670de0b6b3a7640000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106103ad576103ac6112de565b5b9060005260206000209060020201600001546103c9919061136b565b6103d3919061139c565b11156105cc57600a62015180600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106104305761042f6112de565b5b90600052602060002090600202016001015461044c919061136b565b670de0b6b3a7640000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106104a6576104a56112de565b5b9060005260206000209060020201600001546104c2919061136b565b6104cc919061139c565b6104d6919061139c565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461052091906113f6565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106105b6576105b56112de565b5b9060005260206000209060020201600101819055505b80806105d79061144c565b915050610296565b506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610662576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610659906114e1565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161071a929190611501565b6020604051808303816000875af1158015610739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075d9190611562565b503373ffffffffffffffffffffffffffffffffffffffff167f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd987068600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051610807929190611501565b60405180910390a26000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b80341461086257600080fd5b349050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052803481526020014281525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010155505060004290503373ffffffffffffffffffffffffffffffffffffffff167f4b22ccaaeb4846ec98072623a51a9070bf1f01c75ac1f8119035f373df852a0c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050856040516109ad949392919061158f565b60405180910390a25050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600090505b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610ada57600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610aa857610aa76112de565b5b90600052602060002090600202016000015482610ac591906113f6565b91508080610ad29061144c565b915050610a0d565b5060008111610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1590611620565b60405180910390fd5b60008060005b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811015610d3c5762093a80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610bc357610bc26112de565b5b9060005260206000209060020201600101541115610cb857600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610c2c57610c2b6112de565b5b90600052602060002090600202016000015483610c4991906113f6565b92506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c9e57610c9d6112de565b5b906000526020600020906002020160000181905550610d29565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610d0957610d086112de565b5b90600052602060002090600202016000015482610d2691906113f6565b91505b8080610d349061144c565b915050610b24565b5060008211610d80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d779061168c565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610de8573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f18edd09e80386cd99df397e2e0d87d2bb259423eae08645e776321a36fe680ef600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168484604051610e55939291906116ac565b60405180910390a2505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610efb9190611176565b602060405180830381865afa158015610f18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3c91906116f8565b50565b60046020528060005260406000206000915090505481565b60036020528160005260406000208181548110610f7357600080fd5b9060005260206000209060020201600091509150508060000154908060010154905082565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fd2578082015181840152602081019050610fb7565b83811115610fe1576000848401525b50505050565b6000601f19601f8301169050919050565b600061100382610f98565b61100d8185610fa3565b935061101d818560208601610fb4565b61102681610fe7565b840191505092915050565b6000602082019050818103600083015261104b8184610ff8565b905092915050565b600080fd5b6000819050919050565b61106b81611058565b811461107657600080fd5b50565b60008135905061108881611062565b92915050565b6000602082840312156110a4576110a3611053565b5b60006110b284828501611079565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111006110fb6110f6846110bb565b6110db565b6110bb565b9050919050565b6000611112826110e5565b9050919050565b600061112482611107565b9050919050565b61113481611119565b82525050565b600060208201905061114f600083018461112b565b92915050565b6000611160826110bb565b9050919050565b61117081611155565b82525050565b600060208201905061118b6000830184611167565b92915050565b61119a81611155565b81146111a557600080fd5b50565b6000813590506111b781611191565b92915050565b6000602082840312156111d3576111d2611053565b5b60006111e1848285016111a8565b91505092915050565b6111f381611058565b82525050565b600060208201905061120e60008301846111ea565b92915050565b6000806040838503121561122b5761122a611053565b5b6000611239858286016111a8565b925050602061124a85828601611079565b9150509250929050565b600060408201905061126960008301856111ea565b61127660208301846111ea565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112c457607f821691505b602082108114156112d8576112d761127d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061137682611058565b915061138183611058565b9250826113915761139061130d565b5b828204905092915050565b60006113a782611058565b91506113b283611058565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156113eb576113ea61133c565b5b828202905092915050565b600061140182611058565b915061140c83611058565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156114415761144061133c565b5b828201905092915050565b600061145782611058565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561148a5761148961133c565b5b600182019050919050565b7f4e6f20546f6b656e7320746f20636c61696d0000000000000000000000000000600082015250565b60006114cb601283610fa3565b91506114d682611495565b602082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b60006040820190506115166000830185611167565b61152360208301846111ea565b9392505050565b60008115159050919050565b61153f8161152a565b811461154a57600080fd5b50565b60008151905061155c81611536565b92915050565b60006020828403121561157857611577611053565b5b60006115868482850161154d565b91505092915050565b60006080820190506115a46000830187611167565b6115b160208301866111ea565b6115be60408301856111ea565b6115cb60608301846111ea565b95945050505050565b7f7374616b696e672062616c616e63652063616e6e6f7420626520300000000000600082015250565b600061160a601b83610fa3565b9150611615826115d4565b602082019050919050565b60006020820190508181036000830152611639816115fd565b9050919050565b7f6e6f20756e6c6f636b65642062616c616e636520796574000000000000000000600082015250565b6000611676601783610fa3565b915061168182611640565b602082019050919050565b600060208201905081810360008301526116a581611669565b9050919050565b60006060820190506116c16000830186611167565b6116ce60208301856111ea565b6116db60408301846111ea565b949350505050565b6000815190506116f281611062565b92915050565b60006020828403121561170e5761170d611053565b5b600061171c848285016116e3565b9150509291505056fea2646970667358221220a583d200dc0d3ebe001cb673fddce7a77da94c831d48f652ad33ff94b32ce18064736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1939:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:7",
                "type": ""
              }
            ],
            "src": "7:75:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:7"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:7"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:7",
                "type": ""
              }
            ],
            "src": "334:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:7",
                "type": ""
              }
            ],
            "src": "466:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "631:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "641:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "670:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "652:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "652:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "641:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_RWRDToken_$1008",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "613:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "623:7:7",
                "type": ""
              }
            ],
            "src": "568:114:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "749:97:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "824:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "833:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "836:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "826:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "826:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "826:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "772:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "815:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_RWRDToken_$1008",
                              "nodeType": "YulIdentifier",
                              "src": "779:35:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "779:42:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "769:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:53:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "762:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:61:7"
                  },
                  "nodeType": "YulIf",
                  "src": "759:81:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_RWRDToken_$1008",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:7",
                "type": ""
              }
            ],
            "src": "688:158:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "933:98:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "943:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "958:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "952:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "943:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1019:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_RWRDToken_$1008",
                      "nodeType": "YulIdentifier",
                      "src": "974:44:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "974:51:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "974:51:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_RWRDToken_$1008_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "911:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "919:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "927:5:7",
                "type": ""
              }
            ],
            "src": "852:179:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1132:292:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1178:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1180:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1180:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1180:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1153:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1162:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1149:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1149:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1174:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1145:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1145:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1142:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1271:146:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1286:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1300:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1290:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1315:92:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1379:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1390:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1375:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1375:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1399:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_RWRDToken_$1008_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1325:49:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1325:82:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1315:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_RWRDToken_$1008_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1102:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1113:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1125:6:7",
                "type": ""
              }
            ],
            "src": "1037:387:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1458:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1475:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1478:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1468:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1468:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1468:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1572:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:4:7",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1565:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1565:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1565:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1596:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1599:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:15:7"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "1430:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1667:269:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1677:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1691:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1697:1:7",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "1687:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1687:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1677:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1708:38:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1738:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1744:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1734:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1734:12:7"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1712:18:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1785:51:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1799:27:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1813:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1821:4:7",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1809:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1809:17:7"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1799:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1765:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1758:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1758:26:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1755:81:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1888:42:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "1902:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1902:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1902:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1852:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1875:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1883:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1872:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1872:14:7"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1849:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1849:38:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1846:84:7"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1651:4:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1660:6:7",
                "type": ""
              }
            ],
            "src": "1616:320:7"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_RWRDToken_$1008(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_RWRDToken_$1008(value) {\n        if iszero(eq(value, cleanup_t_contract$_RWRDToken_$1008(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_RWRDToken_$1008_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_RWRDToken_$1008(value)\n    }\n\n    function abi_decode_tuple_t_contract$_RWRDToken_$1008_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_RWRDToken_$1008_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13364:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "66:40:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "93:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "87:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "87:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "77:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "49:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "59:6:7",
                "type": ""
              }
            ],
            "src": "7:99:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "208:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "225:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "230:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "218:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "218:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "218:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "246:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "265:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "270:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "261:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "261:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "246:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "180:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "185:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "196:11:7",
                "type": ""
              }
            ],
            "src": "112:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "336:258:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "346:10:7",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "355:1:7",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "350:1:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:63:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "440:3:7"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:1:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "436:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "436:11:7"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "459:3:7"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "464:1:7"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "455:3:7"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "455:11:7"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "449:5:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "449:18:7"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "429:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "429:39:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "429:39:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "376:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "379:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "373:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:13:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "387:19:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "389:15:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "398:1:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "401:2:7",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "394:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "394:10:7"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "389:1:7"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "369:3:7",
                    "statements": []
                  },
                  "src": "365:113:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "512:76:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:3:7"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "567:6:7"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "558:3:7"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "558:16:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "576:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:27:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:27:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "493:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "496:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "490:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:13:7"
                  },
                  "nodeType": "YulIf",
                  "src": "487:101:7"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "318:3:7",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "323:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "328:6:7",
                "type": ""
              }
            ],
            "src": "287:307:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:54:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "658:38:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "676:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:7",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:14:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "692:2:7",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:7:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "668:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:28:7"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "658:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "631:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "641:6:7",
                "type": ""
              }
            ],
            "src": "600:102:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "800:272:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "810:53:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "857:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "824:32:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:39:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "814:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "872:78:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "938:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "943:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "879:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:71:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "872:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "985:5:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "992:4:7",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:16:7"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "999:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1004:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "959:21:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:52:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "959:52:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1020:46:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1031:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1058:6:7"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1036:21:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:29:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1027:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:39:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1020:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "781:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "788:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "796:3:7",
                "type": ""
              }
            ],
            "src": "708:364:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1196:195:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1206:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1218:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1214:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1206:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1253:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1264:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1249:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1272:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1278:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1268:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1242:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1242:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1242:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:86:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1370:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1379:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1306:63:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1306:78:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1298:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1168:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1180:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1191:4:7",
                "type": ""
              }
            ],
            "src": "1078:313:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1437:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1447:19:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1463:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1457:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1457:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1447:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1430:6:7",
                "type": ""
              }
            ],
            "src": "1397:75:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1567:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1584:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1587:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1577:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1577:12:7"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1478:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1690:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1710:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1700:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1700:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1700:12:7"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1601:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1769:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1779:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1790:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1779:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1751:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1761:7:7",
                "type": ""
              }
            ],
            "src": "1724:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1850:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1907:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1916:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1919:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1909:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1909:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1909:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1873:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1898:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1880:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1880:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1870:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1870:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1863:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1863:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1860:63:7"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1843:5:7",
                "type": ""
              }
            ],
            "src": "1807:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1987:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1997:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2019:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2006:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2006:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1997:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2062:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2035:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2035:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2035:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1965:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1973:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1981:5:7",
                "type": ""
              }
            ],
            "src": "1935:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2146:263:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2192:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2194:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2194:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2194:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2167:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2176:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2163:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2163:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2188:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2159:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2159:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "2156:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2285:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2300:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2314:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2304:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2329:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2364:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2375:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2360:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2360:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2384:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2339:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2339:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2329:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2116:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2127:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2139:6:7",
                "type": ""
              }
            ],
            "src": "2080:329:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2460:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2470:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2485:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2492:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2481:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2481:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2470:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2442:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2452:7:7",
                "type": ""
              }
            ],
            "src": "2415:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2579:28:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2589:12:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2596:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "2589:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2565:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "2575:3:7",
                "type": ""
              }
            ],
            "src": "2547:60:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2673:82:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2683:66:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2741:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "2723:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2723:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "2714:8:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2714:34:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2696:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2696:53:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2683:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2653:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2663:9:7",
                "type": ""
              }
            ],
            "src": "2613:142:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2821:66:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2831:50:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2875:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2844:30:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2844:37:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2831:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2801:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2811:9:7",
                "type": ""
              }
            ],
            "src": "2761:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2971:66:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2981:50:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3025:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2994:30:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2994:37:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2981:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_RWRDToken_$1008_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2951:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2961:9:7",
                "type": ""
              }
            ],
            "src": "2893:144:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3126:84:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3143:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3197:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_RWRDToken_$1008_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3148:48:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3148:55:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3136:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3136:68:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3136:68:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_RWRDToken_$1008_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3114:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3121:3:7",
                "type": ""
              }
            ],
            "src": "3043:167:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3332:142:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3342:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3354:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3365:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3350:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3350:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3342:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3440:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3453:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3464:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_RWRDToken_$1008_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3378:61:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3378:89:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3378:89:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_RWRDToken_$1008__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3304:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3316:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3327:4:7",
                "type": ""
              }
            ],
            "src": "3216:258:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3525:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3535:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3564:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3546:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3546:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3535:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3507:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3517:7:7",
                "type": ""
              }
            ],
            "src": "3480:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3647:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3664:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3687:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3669:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3669:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3657:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3657:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3657:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3635:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3642:3:7",
                "type": ""
              }
            ],
            "src": "3582:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3804:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3814:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3826:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3837:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3822:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3822:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3814:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3894:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3907:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3918:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3903:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3903:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3850:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3850:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3850:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3776:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3788:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3799:4:7",
                "type": ""
              }
            ],
            "src": "3706:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3977:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4034:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4043:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4046:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4036:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4036:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4036:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4000:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4025:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4007:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4007:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3997:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3997:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3990:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3990:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "3987:63:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3970:5:7",
                "type": ""
              }
            ],
            "src": "3934:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4114:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4124:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4146:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4133:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4133:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4124:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4189:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4162:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4162:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4162:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4092:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4100:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4108:5:7",
                "type": ""
              }
            ],
            "src": "4062:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4273:263:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4319:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4321:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4321:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4321:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4294:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4303:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4290:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4290:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4315:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4286:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4286:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "4283:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4412:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4427:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4441:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4431:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4456:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4491:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4502:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4487:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4487:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4511:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4466:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4466:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4456:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4243:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4254:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4266:6:7",
                "type": ""
              }
            ],
            "src": "4207:329:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4607:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4624:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4647:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4629:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4629:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4617:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4617:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4617:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4595:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4602:3:7",
                "type": ""
              }
            ],
            "src": "4542:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4764:124:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4774:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4786:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4797:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4782:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4782:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4774:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4854:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4867:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4878:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4863:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4863:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4810:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4810:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4810:71:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4736:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4748:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4759:4:7",
                "type": ""
              }
            ],
            "src": "4666:222:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4977:391:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5023:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5025:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5025:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5025:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4998:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5007:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4994:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4994:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5019:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4990:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4990:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "4987:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5116:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5131:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5145:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5135:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5160:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5195:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5206:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5191:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5191:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5215:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5170:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5170:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5160:6:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5243:118:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5258:16:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5272:2:7",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5262:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5288:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5323:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5334:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5319:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5319:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5343:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5298:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5298:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "5288:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4939:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4950:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4962:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4970:6:7",
                "type": ""
              }
            ],
            "src": "4894:474:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5500:206:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5510:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5522:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5533:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5518:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5518:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5510:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5590:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5603:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5614:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5599:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5599:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5546:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5546:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5546:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5671:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5684:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5695:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5680:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5680:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5627:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5627:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5627:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5464:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5476:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5484:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5495:4:7",
                "type": ""
              }
            ],
            "src": "5374:332:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5740:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5757:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5760:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5750:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5750:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5750:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5854:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5857:4:7",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5847:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5847:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5847:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5878:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5881:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5871:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5871:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5871:15:7"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "5712:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5949:269:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5959:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5973:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5979:1:7",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5969:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5969:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5959:6:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5990:38:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6020:4:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6026:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6016:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6016:12:7"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "5994:18:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6067:51:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6081:27:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6095:6:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6103:4:7",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6091:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6091:17:7"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6081:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6047:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6040:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6040:26:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6037:81:7"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6170:42:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "6184:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6184:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6184:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6134:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6157:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6165:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6154:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6154:14:7"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6131:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6131:38:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6128:84:7"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5933:4:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5942:6:7",
                "type": ""
              }
            ],
            "src": "5898:320:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6252:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6269:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6272:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6262:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6262:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6262:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6366:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6369:4:7",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6359:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6359:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6359:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6390:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6393:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6383:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6383:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6383:15:7"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6224:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6438:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6455:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6458:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6448:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6448:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6448:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6552:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6555:4:7",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6545:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6545:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6545:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6576:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6579:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6569:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6569:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6569:15:7"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "6410:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6624:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6641:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6644:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6634:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6634:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6634:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6738:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6741:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6731:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6762:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6765:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6755:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6755:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6755:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6596:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6824:143:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6834:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6857:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6839:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6839:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6834:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6868:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6891:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6873:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6873:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6868:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6915:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "6917:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6917:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6917:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6912:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6905:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6905:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6902:35:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6947:14:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6956:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6959:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6952:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6952:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6947:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6813:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6816:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6822:1:7",
                "type": ""
              }
            ],
            "src": "6782:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7021:300:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7031:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7054:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7036:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7036:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7031:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7065:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7088:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7070:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7070:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7065:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7263:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7265:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7265:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7265:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7175:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7168:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7168:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7161:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7161:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7183:1:7"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7190:66:7",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7258:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7186:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7186:74:7"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7180:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7180:81:7"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7157:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7157:105:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7154:131:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7295:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7310:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7313:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7306:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7306:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7295:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7004:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7007:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7013:7:7",
                "type": ""
              }
            ],
            "src": "6973:348:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7371:261:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7381:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7404:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7386:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7386:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7381:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7415:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7438:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7420:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7420:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7415:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7578:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7580:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7580:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7580:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7499:1:7"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7506:66:7",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7574:1:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7502:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7502:74:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7496:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7496:81:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7493:107:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7610:16:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7621:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7624:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7617:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7617:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7610:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7358:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7361:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7367:3:7",
                "type": ""
              }
            ],
            "src": "7327:305:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7681:190:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7691:33:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7718:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7700:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7700:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "7691:5:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7814:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7816:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7816:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7816:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7739:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7746:66:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7736:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7736:77:7"
                  },
                  "nodeType": "YulIf",
                  "src": "7733:103:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7845:20:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7856:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7863:1:7",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7852:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7852:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7845:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7667:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7677:3:7",
                "type": ""
              }
            ],
            "src": "7638:233:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7983:62:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8005:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8013:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8001:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8001:14:7"
                      },
                      {
                        "hexValue": "4e6f20546f6b656e7320746f20636c61696d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8017:20:7",
                        "type": "",
                        "value": "No Tokens to claim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7994:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7994:44:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7994:44:7"
                }
              ]
            },
            "name": "store_literal_in_memory_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7975:6:7",
                "type": ""
              }
            ],
            "src": "7877:168:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8197:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8207:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8273:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8278:2:7",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8214:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8214:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8207:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8379:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8",
                      "nodeType": "YulIdentifier",
                      "src": "8290:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8290:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8290:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8392:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8403:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8408:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8399:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8399:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8392:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8185:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8193:3:7",
                "type": ""
              }
            ],
            "src": "8051:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8594:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8604:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8616:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8627:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8612:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8612:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8604:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8651:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8662:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8647:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8647:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8670:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8676:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8666:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8666:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8640:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8640:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8640:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8696:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8830:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8704:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8704:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8696:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8574:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8589:4:7",
                "type": ""
              }
            ],
            "src": "8423:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8974:206:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8984:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8996:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9007:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8992:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8992:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8984:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9064:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9077:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9088:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9073:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9073:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9020:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9020:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9020:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9145:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9158:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9169:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9154:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9154:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9101:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9101:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9101:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8938:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8950:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8958:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8969:4:7",
                "type": ""
              }
            ],
            "src": "8848:332:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9228:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9238:32:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9263:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9256:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9256:13:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9249:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9249:21:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9238:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9210:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9220:7:7",
                "type": ""
              }
            ],
            "src": "9186:90:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9322:76:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9376:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9385:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9388:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9378:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9378:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9378:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9345:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9367:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "9352:14:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9352:21:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9342:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9342:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9335:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9335:40:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9332:60:7"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9315:5:7",
                "type": ""
              }
            ],
            "src": "9282:116:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9464:77:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9474:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9489:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9483:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9483:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "9474:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9529:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "9505:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9505:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9505:30:7"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "9442:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9450:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9458:5:7",
                "type": ""
              }
            ],
            "src": "9404:137:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9621:271:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9667:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9669:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9669:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9669:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9642:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9651:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9638:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9638:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9663:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9634:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9634:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "9631:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9760:125:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9775:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9789:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9779:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9804:71:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9847:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9858:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9843:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9843:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9867:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9814:28:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9814:61:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9804:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9591:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9602:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9614:6:7",
                "type": ""
              }
            ],
            "src": "9547:345:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10080:371:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10090:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10102:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10113:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10098:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10098:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10090:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10171:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10184:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10195:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10180:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10180:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10127:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10127:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10127:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10252:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10265:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10276:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10261:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10261:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10208:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10208:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10208:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "10334:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10347:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10358:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10343:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10343:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10290:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10290:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10290:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "10416:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10429:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10440:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10425:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10425:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10372:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10372:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10372:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10028:9:7",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "10040:6:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "10048:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10056:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10064:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10075:4:7",
                "type": ""
              }
            ],
            "src": "9898:553:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10563:71:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10585:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10593:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10581:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10581:14:7"
                      },
                      {
                        "hexValue": "7374616b696e672062616c616e63652063616e6e6f742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10597:29:7",
                        "type": "",
                        "value": "staking balance cannot be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10574:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10574:53:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10574:53:7"
                }
              ]
            },
            "name": "store_literal_in_memory_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10555:6:7",
                "type": ""
              }
            ],
            "src": "10457:177:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10786:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10796:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10862:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10867:2:7",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10803:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10803:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10796:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10968:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                      "nodeType": "YulIdentifier",
                      "src": "10879:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10879:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10879:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10981:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10992:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10997:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10988:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10988:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10981:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10774:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10782:3:7",
                "type": ""
              }
            ],
            "src": "10640:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11183:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11193:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11205:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11216:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11201:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11201:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11193:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11240:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11251:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11236:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11236:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11259:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11265:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11255:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11255:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11229:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11229:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11229:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11285:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11419:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11293:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11293:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11285:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11163:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11178:4:7",
                "type": ""
              }
            ],
            "src": "11012:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11543:67:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11565:6:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11573:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11561:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11561:14:7"
                      },
                      {
                        "hexValue": "6e6f20756e6c6f636b65642062616c616e636520796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11577:25:7",
                        "type": "",
                        "value": "no unlocked balance yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11554:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11554:49:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11554:49:7"
                }
              ]
            },
            "name": "store_literal_in_memory_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11535:6:7",
                "type": ""
              }
            ],
            "src": "11437:173:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11762:220:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11772:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11838:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11843:2:7",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11779:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11779:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11772:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11944:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae",
                      "nodeType": "YulIdentifier",
                      "src": "11855:88:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11855:93:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11855:93:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11957:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11968:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11973:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11964:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11964:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11957:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11750:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11758:3:7",
                "type": ""
              }
            ],
            "src": "11616:366:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12159:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12169:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12181:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12192:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12177:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12177:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12169:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12216:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12227:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12212:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12212:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12235:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12241:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12231:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12231:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12205:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12205:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12205:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12261:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12395:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12269:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12269:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12261:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12139:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12154:4:7",
                "type": ""
              }
            ],
            "src": "11988:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12567:288:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12577:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12589:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12600:2:7",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12585:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12585:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12577:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12657:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12670:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12681:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12666:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12666:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12613:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12613:71:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12613:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12738:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12751:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12762:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12747:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12747:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12694:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12694:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12694:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12820:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12833:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12844:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12829:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12829:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12776:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12776:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12776:72:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12523:9:7",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12535:6:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12543:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12551:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12562:4:7",
                "type": ""
              }
            ],
            "src": "12413:442:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12924:80:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12934:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12949:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12943:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12943:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "12934:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12992:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "12965:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12965:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12965:33:7"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "12902:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12910:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "12918:5:7",
                "type": ""
              }
            ],
            "src": "12861:143:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13087:274:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13133:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "13135:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13135:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13135:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13108:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13117:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13104:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13104:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13129:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13100:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13100:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "13097:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "13226:128:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "13241:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13255:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "13245:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13270:74:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13316:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "13327:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13312:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13312:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13336:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "13280:31:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13280:64:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "13270:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13057:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13068:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13080:6:7",
                "type": ""
              }
            ],
            "src": "13010:351:7"
          }
        ]
      },
      "contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_RWRDToken_$1008_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_RWRDToken_$1008_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_RWRDToken_$1008_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_RWRDToken_$1008__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_RWRDToken_$1008_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8(memPtr) {\n\n        mstore(add(memPtr, 0), \"No Tokens to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba(memPtr) {\n\n        mstore(add(memPtr, 0), \"staking balance cannot be 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae(memPtr) {\n\n        mstore(add(memPtr, 0), \"no unlocked balance yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "148:2890:6:-:0;;;175:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;748:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;805:10;793:9;;:22;;;;;;;;;;;;;;;;;;834:10;826:5;;:18;;;;;;;;;;;;;;;;;;748:104;148:2890;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:114::-;623:7;652:24;670:5;652:24;:::i;:::-;641:35;;568:114;;;:::o;688:158::-;779:42;815:5;779:42;:::i;:::-;772:5;769:53;759:81;;836:1;833;826:12;759:81;688:158;:::o;852:179::-;927:5;958:6;952:13;943:22;;974:51;1019:5;974:51;:::i;:::-;852:179;;;;:::o;1037:387::-;1125:6;1174:2;1162:9;1153:7;1149:23;1145:32;1142:119;;;1180:79;;:::i;:::-;1142:119;1300:1;1325:82;1399:7;1390:6;1379:9;1375:22;1325:82;:::i;:::-;1315:92;;1271:146;1037:387;;;;:::o;1430:180::-;1478:77;1475:1;1468:88;1575:4;1572:1;1565:15;1599:4;1596:1;1589:15;1616:320;1660:6;1697:1;1691:4;1687:12;1677:22;;1744:1;1738:4;1734:12;1765:18;1755:81;;1821:4;1813:6;1809:17;1799:27;;1755:81;1883:2;1875:6;1872:14;1852:18;1849:38;1846:84;;;1902:18;;:::i;:::-;1846:84;1667:269;1616:320;;;:::o;148:2890:6:-;;;;;;;",
  "deployedSourceMap": "148:2890:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;175:39;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2283:750;;;;;;;;;;;;;:::i;:::-;;948:353;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;248:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;221:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1311:964;;;;;;;;;;;;;:::i;:::-;;860:80;;;;;;;;;;;;;:::i;:::-;;694:45;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;175:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2283:750::-;2330:6;2326:446;2346:11;:23;2358:10;2346:23;;;;;;;;;;;;;;;:30;;;;2342:1;:34;2326:446;;;2503:1;2494:5;2454:11;:23;2466:10;2454:23;;;;;;;;;;;;;;;2478:1;2454:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;:45;;;;:::i;:::-;2441:7;2401:11;:23;2413:10;2401:23;;;;;;;;;;;;;;;2425:1;2401:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;:48;;;;:::i;:::-;2400:100;;;;:::i;:::-;:104;2397:364;;;2683:2;2674:5;2634:11;:23;2646:10;2634:23;;;;;;;;;;;;;;;2658:1;2634:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;:45;;;;:::i;:::-;2621:7;2581:11;:23;2593:10;2581:23;;;;;;;;;;;;;;;2605:1;2581:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;:48;;;;:::i;:::-;2580:100;;;;:::i;:::-;:105;;;;:::i;:::-;2552:13;:25;2566:10;2552:25;;;;;;;;;;;;;;;;:133;;;;:::i;:::-;2524:13;:25;2538:10;2524:25;;;;;;;;;;;;;;;:161;;;;2744:1;2704:11;:23;2716:10;2704:23;;;;;;;;;;;;;;;2728:1;2704:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;:41;;;;2397:364;2378:3;;;;;:::i;:::-;;;;2326:446;;;;2820:1;2792:13;:25;2806:10;2792:25;;;;;;;;;;;;;;;;:29;2784:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;2857:9;;;;;;;;;;;:18;;;2876:10;2888:13;:25;2902:10;2888:25;;;;;;;;;;;;;;;;2857:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2945:10;2932:51;;;2938:5;;;;;;;;;;;2957:13;:25;2971:10;2957:25;;;;;;;;;;;;;;;;2932:51;;;;;;;:::i;:::-;;;;;;;;3024:1;2996:13;:25;3010:10;2996:25;;;;;;;;;;;;;;;:29;;;;2283:750::o;948:353::-;1029:7;1016:9;:20;1008:29;;;;;;1058:9;1048:19;;1080:11;:23;1092:10;1080:23;;;;;;;;;;;;;;;1109:38;;;;;;;;1120:9;1109:38;;;;1131:15;1109:38;;;1080:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1161:17;1181:15;1161:35;;1220:10;1214:79;;;1232:5;;;;;;;;;;;1239:7;1248:11;:23;1260:10;1248:23;;;;;;;;;;;;;;;:30;;;;1280:12;1214:79;;;;;;;;;:::i;:::-;;;;;;;;995:306;948:353;:::o;248:26::-;;;;;;;;;;;;;:::o;221:20::-;;;;;;;;;;;;;:::o;1311:964::-;1353:19;1389:6;1398:1;1389:10;;1385:153;1405:11;:23;1417:10;1405:23;;;;;;;;;;;;;;;:30;;;;1401:1;:34;1385:153;;;1490:11;:23;1502:10;1490:23;;;;;;;;;;;;;;;1514:1;1490:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;1473:14;:53;;;;:::i;:::-;1456:70;;1437:3;;;;;:::i;:::-;;;;1385:153;;;;1575:1;1558:14;:18;1550:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1621:16;1648:19;1684:6;1680:402;1700:11;:23;1712:10;1700:23;;;;;;;;;;;;;;;:30;;;;1696:1;:34;1680:402;;;1794:6;1754:11;:23;1766:10;1754:23;;;;;;;;;;;;;;;1778:1;1754:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;:46;1751:320;;;1849:11;:23;1861:10;1849:23;;;;;;;;;;;;;;;1873:1;1849:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;1835:11;:50;;;;:::i;:::-;1821:64;;1943:1;1904:11;:23;1916:10;1904:23;;;;;;;;;;;;;;;1928:1;1904:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;:40;;;;1751:320;;;2019:11;:23;2031:10;2019:23;;;;;;;;;;;;;;;2043:1;2019:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;2002:14;:53;;;;:::i;:::-;1985:70;;1751:320;1732:3;;;;;:::i;:::-;;;;1680:402;;;;2116:1;2102:11;:15;2094:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;2166:5;;;;;;;;;;;2158:23;;:36;2182:11;2158:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2227:10;2212:55;;;2220:5;;;;;;;;;;;2239:11;2252:14;2212:55;;;;;;;;:::i;:::-;;;;;;;;1340:935;;;1311:964::o;860:80::-;906:9;;;;;;;;;;;:19;;;926:5;;;;;;;;;;;906:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;860:80::o;694:45::-;;;;;;;;;;;;;;;;;:::o;636:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:77;1761:7;1790:5;1779:16;;1724:77;;;:::o;1807:122::-;1880:24;1898:5;1880:24;:::i;:::-;1873:5;1870:35;1860:63;;1919:1;1916;1909:12;1860:63;1807:122;:::o;1935:139::-;1981:5;2019:6;2006:20;1997:29;;2035:33;2062:5;2035:33;:::i;:::-;1935:139;;;;:::o;2080:329::-;2139:6;2188:2;2176:9;2167:7;2163:23;2159:32;2156:119;;;2194:79;;:::i;:::-;2156:119;2314:1;2339:53;2384:7;2375:6;2364:9;2360:22;2339:53;:::i;:::-;2329:63;;2285:117;2080:329;;;;:::o;2415:126::-;2452:7;2492:42;2485:5;2481:54;2470:65;;2415:126;;;:::o;2547:60::-;2575:3;2596:5;2589:12;;2547:60;;;:::o;2613:142::-;2663:9;2696:53;2714:34;2723:24;2741:5;2723:24;:::i;:::-;2714:34;:::i;:::-;2696:53;:::i;:::-;2683:66;;2613:142;;;:::o;2761:126::-;2811:9;2844:37;2875:5;2844:37;:::i;:::-;2831:50;;2761:126;;;:::o;2893:144::-;2961:9;2994:37;3025:5;2994:37;:::i;:::-;2981:50;;2893:144;;;:::o;3043:167::-;3148:55;3197:5;3148:55;:::i;:::-;3143:3;3136:68;3043:167;;:::o;3216:258::-;3327:4;3365:2;3354:9;3350:18;3342:26;;3378:89;3464:1;3453:9;3449:17;3440:6;3378:89;:::i;:::-;3216:258;;;;:::o;3480:96::-;3517:7;3546:24;3564:5;3546:24;:::i;:::-;3535:35;;3480:96;;;:::o;3582:118::-;3669:24;3687:5;3669:24;:::i;:::-;3664:3;3657:37;3582:118;;:::o;3706:222::-;3799:4;3837:2;3826:9;3822:18;3814:26;;3850:71;3918:1;3907:9;3903:17;3894:6;3850:71;:::i;:::-;3706:222;;;;:::o;3934:122::-;4007:24;4025:5;4007:24;:::i;:::-;4000:5;3997:35;3987:63;;4046:1;4043;4036:12;3987:63;3934:122;:::o;4062:139::-;4108:5;4146:6;4133:20;4124:29;;4162:33;4189:5;4162:33;:::i;:::-;4062:139;;;;:::o;4207:329::-;4266:6;4315:2;4303:9;4294:7;4290:23;4286:32;4283:119;;;4321:79;;:::i;:::-;4283:119;4441:1;4466:53;4511:7;4502:6;4491:9;4487:22;4466:53;:::i;:::-;4456:63;;4412:117;4207:329;;;;:::o;4542:118::-;4629:24;4647:5;4629:24;:::i;:::-;4624:3;4617:37;4542:118;;:::o;4666:222::-;4759:4;4797:2;4786:9;4782:18;4774:26;;4810:71;4878:1;4867:9;4863:17;4854:6;4810:71;:::i;:::-;4666:222;;;;:::o;4894:474::-;4962:6;4970;5019:2;5007:9;4998:7;4994:23;4990:32;4987:119;;;5025:79;;:::i;:::-;4987:119;5145:1;5170:53;5215:7;5206:6;5195:9;5191:22;5170:53;:::i;:::-;5160:63;;5116:117;5272:2;5298:53;5343:7;5334:6;5323:9;5319:22;5298:53;:::i;:::-;5288:63;;5243:118;4894:474;;;;;:::o;5374:332::-;5495:4;5533:2;5522:9;5518:18;5510:26;;5546:71;5614:1;5603:9;5599:17;5590:6;5546:71;:::i;:::-;5627:72;5695:2;5684:9;5680:18;5671:6;5627:72;:::i;:::-;5374:332;;;;;:::o;5712:180::-;5760:77;5757:1;5750:88;5857:4;5854:1;5847:15;5881:4;5878:1;5871:15;5898:320;5942:6;5979:1;5973:4;5969:12;5959:22;;6026:1;6020:4;6016:12;6047:18;6037:81;;6103:4;6095:6;6091:17;6081:27;;6037:81;6165:2;6157:6;6154:14;6134:18;6131:38;6128:84;;;6184:18;;:::i;:::-;6128:84;5949:269;5898:320;;;:::o;6224:180::-;6272:77;6269:1;6262:88;6369:4;6366:1;6359:15;6393:4;6390:1;6383:15;6410:180;6458:77;6455:1;6448:88;6555:4;6552:1;6545:15;6579:4;6576:1;6569:15;6596:180;6644:77;6641:1;6634:88;6741:4;6738:1;6731:15;6765:4;6762:1;6755:15;6782:185;6822:1;6839:20;6857:1;6839:20;:::i;:::-;6834:25;;6873:20;6891:1;6873:20;:::i;:::-;6868:25;;6912:1;6902:35;;6917:18;;:::i;:::-;6902:35;6959:1;6956;6952:9;6947:14;;6782:185;;;;:::o;6973:348::-;7013:7;7036:20;7054:1;7036:20;:::i;:::-;7031:25;;7070:20;7088:1;7070:20;:::i;:::-;7065:25;;7258:1;7190:66;7186:74;7183:1;7180:81;7175:1;7168:9;7161:17;7157:105;7154:131;;;7265:18;;:::i;:::-;7154:131;7313:1;7310;7306:9;7295:20;;6973:348;;;;:::o;7327:305::-;7367:3;7386:20;7404:1;7386:20;:::i;:::-;7381:25;;7420:20;7438:1;7420:20;:::i;:::-;7415:25;;7574:1;7506:66;7502:74;7499:1;7496:81;7493:107;;;7580:18;;:::i;:::-;7493:107;7624:1;7621;7617:9;7610:16;;7327:305;;;;:::o;7638:233::-;7677:3;7700:24;7718:5;7700:24;:::i;:::-;7691:33;;7746:66;7739:5;7736:77;7733:103;;;7816:18;;:::i;:::-;7733:103;7863:1;7856:5;7852:13;7845:20;;7638:233;;;:::o;7877:168::-;8017:20;8013:1;8005:6;8001:14;7994:44;7877:168;:::o;8051:366::-;8193:3;8214:67;8278:2;8273:3;8214:67;:::i;:::-;8207:74;;8290:93;8379:3;8290:93;:::i;:::-;8408:2;8403:3;8399:12;8392:19;;8051:366;;;:::o;8423:419::-;8589:4;8627:2;8616:9;8612:18;8604:26;;8676:9;8670:4;8666:20;8662:1;8651:9;8647:17;8640:47;8704:131;8830:4;8704:131;:::i;:::-;8696:139;;8423:419;;;:::o;8848:332::-;8969:4;9007:2;8996:9;8992:18;8984:26;;9020:71;9088:1;9077:9;9073:17;9064:6;9020:71;:::i;:::-;9101:72;9169:2;9158:9;9154:18;9145:6;9101:72;:::i;:::-;8848:332;;;;;:::o;9186:90::-;9220:7;9263:5;9256:13;9249:21;9238:32;;9186:90;;;:::o;9282:116::-;9352:21;9367:5;9352:21;:::i;:::-;9345:5;9342:32;9332:60;;9388:1;9385;9378:12;9332:60;9282:116;:::o;9404:137::-;9458:5;9489:6;9483:13;9474:22;;9505:30;9529:5;9505:30;:::i;:::-;9404:137;;;;:::o;9547:345::-;9614:6;9663:2;9651:9;9642:7;9638:23;9634:32;9631:119;;;9669:79;;:::i;:::-;9631:119;9789:1;9814:61;9867:7;9858:6;9847:9;9843:22;9814:61;:::i;:::-;9804:71;;9760:125;9547:345;;;;:::o;9898:553::-;10075:4;10113:3;10102:9;10098:19;10090:27;;10127:71;10195:1;10184:9;10180:17;10171:6;10127:71;:::i;:::-;10208:72;10276:2;10265:9;10261:18;10252:6;10208:72;:::i;:::-;10290;10358:2;10347:9;10343:18;10334:6;10290:72;:::i;:::-;10372;10440:2;10429:9;10425:18;10416:6;10372:72;:::i;:::-;9898:553;;;;;;;:::o;10457:177::-;10597:29;10593:1;10585:6;10581:14;10574:53;10457:177;:::o;10640:366::-;10782:3;10803:67;10867:2;10862:3;10803:67;:::i;:::-;10796:74;;10879:93;10968:3;10879:93;:::i;:::-;10997:2;10992:3;10988:12;10981:19;;10640:366;;;:::o;11012:419::-;11178:4;11216:2;11205:9;11201:18;11193:26;;11265:9;11259:4;11255:20;11251:1;11240:9;11236:17;11229:47;11293:131;11419:4;11293:131;:::i;:::-;11285:139;;11012:419;;;:::o;11437:173::-;11577:25;11573:1;11565:6;11561:14;11554:49;11437:173;:::o;11616:366::-;11758:3;11779:67;11843:2;11838:3;11779:67;:::i;:::-;11772:74;;11855:93;11944:3;11855:93;:::i;:::-;11973:2;11968:3;11964:12;11957:19;;11616:366;;;:::o;11988:419::-;12154:4;12192:2;12181:9;12177:18;12169:26;;12241:9;12235:4;12231:20;12227:1;12216:9;12212:17;12205:47;12269:131;12395:4;12269:131;:::i;:::-;12261:139;;11988:419;;;:::o;12413:442::-;12562:4;12600:2;12589:9;12585:18;12577:26;;12613:71;12681:1;12670:9;12666:17;12657:6;12613:71;:::i;:::-;12694:72;12762:2;12751:9;12747:18;12738:6;12694:72;:::i;:::-;12776;12844:2;12833:9;12829:18;12820:6;12776:72;:::i;:::-;12413:442;;;;;;:::o;12861:143::-;12918:5;12949:6;12943:13;12934:22;;12965:33;12992:5;12965:33;:::i;:::-;12861:143;;;;:::o;13010:351::-;13080:6;13129:2;13117:9;13108:7;13104:23;13100:32;13097:119;;;13135:79;;:::i;:::-;13097:119;13255:1;13280:64;13336:7;13327:6;13316:9;13312:22;13280:64;:::i;:::-;13270:74;;13226:128;13010:351;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./RWRDToken.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract StakingApp {\r\n    string public name = \"Staking Contract\";\r\n    address public owner;\r\n    RWRDToken public rwrdToken;\r\n    event Stake(address indexed from, address to, uint256 value, uint256 stakingSlot, uint256 momentStaked);\r\n    event Unstake(address from, address indexed to, uint256 value, uint256 lockedBalance);\r\n    event Claim(address from, address indexed to, uint256 value);\r\n\r\n    struct ethAndTime {\r\n        uint amountEth;\r\n        uint timeStaked;\r\n    } \r\n    mapping(address => ethAndTime[]) public ethBalances;\r\n    mapping(address => uint) public amountPayable;\r\n\r\n    constructor(RWRDToken _rwrdToken) {\r\n        rwrdToken = _rwrdToken;\r\n        owner = msg.sender;\r\n    }\r\n\r\n    function TokenBalance() public view{\r\n        rwrdToken.balanceOf(owner);\r\n    }\r\n\r\n    function stakeETH(uint _amount) public payable {\r\n\r\n        require(msg.value == _amount);\r\n        _amount = msg.value;\r\n\r\n        ethBalances[msg.sender].push(ethAndTime(msg.value, block.timestamp));\r\n\r\n        uint momentStaked = block.timestamp;\r\n\r\n        emit Stake(msg.sender, owner, _amount, ethBalances[msg.sender].length, momentStaked);\r\n    }\r\n\r\n\r\n    function unstakeETH() public {\r\n\r\n        uint currentBalance;\r\n\r\n        for(uint i = 0; i < ethBalances[msg.sender].length; i++){\r\n            currentBalance = currentBalance + ethBalances[msg.sender][i].amountEth;\r\n        }\r\n\r\n        require(currentBalance > 0, \"staking balance cannot be 0\");\r\n\r\n        uint ethAvaiable;\r\n        uint ethStillStaked;\r\n\r\n        for(uint i = 0; i < ethBalances[msg.sender].length; i++){\r\n            if(ethBalances[msg.sender][i].timeStaked > 7 days) {\r\n                ethAvaiable = ethAvaiable + ethBalances[msg.sender][i].amountEth;\r\n                ethBalances[msg.sender][i].amountEth = 0;\r\n            } else {\r\n                ethStillStaked = ethStillStaked + ethBalances[msg.sender][i].amountEth;\r\n            }\r\n        }\r\n\r\n        require(ethAvaiable > 0, \"no unlocked balance yet\");\r\n\r\n        payable(owner).transfer(ethAvaiable);\r\n\r\n        emit Unstake(owner, msg.sender, ethAvaiable, ethStillStaked);\r\n    }\r\n\r\n    function claimTokens() public {\r\n\r\n        for(uint i = 0; i < ethBalances[msg.sender].length; i++){\r\n            if((ethBalances[msg.sender][i].amountEth / (1 ether)) * (ethBalances[msg.sender][i].timeStaked / 86400) > 0){\r\n                amountPayable[msg.sender] = amountPayable[msg.sender] + (ethBalances[msg.sender][i].amountEth / (1 ether)) * (ethBalances[msg.sender][i].timeStaked / 86400) * 10;\r\n                ethBalances[msg.sender][i].timeStaked = 0;\r\n            }\r\n        }\r\n\r\n        require(amountPayable[msg.sender] > 0, \"No Tokens to claim\");\r\n\r\n        rwrdToken.transfer(msg.sender, amountPayable[msg.sender]);\r\n\r\n        emit Claim(owner, msg.sender, amountPayable[msg.sender]);\r\n\r\n        amountPayable[msg.sender] = 0;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\Arne\\Spool\\contracts\\StakingApp.sol",
  "ast": {
    "absolutePath": "project:/contracts/StakingApp.sol",
    "exportedSymbols": {
      "Context": [
        670
      ],
      "ERC20": [
        545
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "RWRDToken": [
        1008
      ],
      "SafeMath": [
        982
      ],
      "StakingApp": [
        1403
      ]
    },
    "id": 1404,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1010,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "project:/contracts/RWRDToken.sol",
        "file": "./RWRDToken.sol",
        "id": 1011,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1404,
        "sourceUnit": 1009,
        "src": "60:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1012,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1404,
        "sourceUnit": 983,
        "src": "87:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "StakingApp",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1403,
        "linearizedBaseContracts": [
          1403
        ],
        "name": "StakingApp",
        "nameLocation": "157:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 1015,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "189:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "175:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1013,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "175:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "5374616b696e6720436f6e7472616374",
              "id": 1014,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "196:18:6",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_28df65e3e787da752d78d981344a2b93809a4a4e1466ab7303e44c1e894c984e",
                "typeString": "literal_string \"Staking Contract\""
              },
              "value": "Staking Contract"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 1017,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "236:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "221:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1016,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "221:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7fc3e6b2",
            "id": 1020,
            "mutability": "mutable",
            "name": "rwrdToken",
            "nameLocation": "265:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "248:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RWRDToken_$1008",
              "typeString": "contract RWRDToken"
            },
            "typeName": {
              "id": 1019,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1018,
                "name": "RWRDToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1008,
                "src": "248:9:6"
              },
              "referencedDeclaration": 1008,
              "src": "248:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RWRDToken_$1008",
                "typeString": "contract RWRDToken"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1032,
            "name": "Stake",
            "nameLocation": "287:5:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "309:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "293:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "323:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "315:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1026,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "335:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "327:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "327:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1028,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingSlot",
                  "nameLocation": "350:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "342:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1030,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "momentStaked",
                  "nameLocation": "371:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "363:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "292:92:6"
            },
            "src": "281:104:6"
          },
          {
            "anonymous": false,
            "id": 1042,
            "name": "Unstake",
            "nameLocation": "397:7:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "413:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "405:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1036,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "435:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "419:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1038,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "447:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "439:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1040,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockedBalance",
                  "nameLocation": "462:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "454:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "404:72:6"
            },
            "src": "391:86:6"
          },
          {
            "anonymous": false,
            "id": 1050,
            "name": "Claim",
            "nameLocation": "489:5:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1044,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "503:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "495:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1046,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "525:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "509:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1048,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "537:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "529:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "494:49:6"
            },
            "src": "483:61:6"
          },
          {
            "canonicalName": "StakingApp.ethAndTime",
            "id": 1055,
            "members": [
              {
                "constant": false,
                "id": 1052,
                "mutability": "mutable",
                "name": "amountEth",
                "nameLocation": "586:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 1055,
                "src": "581:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1051,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1054,
                "mutability": "mutable",
                "name": "timeStaked",
                "nameLocation": "611:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 1055,
                "src": "606:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1053,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "606:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ethAndTime",
            "nameLocation": "559:10:6",
            "nodeType": "StructDefinition",
            "scope": 1403,
            "src": "552:77:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "facea6b1",
            "id": 1061,
            "mutability": "mutable",
            "name": "ethBalances",
            "nameLocation": "676:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "636:51:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct StakingApp.ethAndTime[])"
            },
            "typeName": {
              "id": 1060,
              "keyType": {
                "id": 1056,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "644:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "636:32:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct StakingApp.ethAndTime[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1058,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1057,
                    "name": "ethAndTime",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1055,
                    "src": "655:10:6"
                  },
                  "referencedDeclaration": 1055,
                  "src": "655:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ethAndTime_$1055_storage_ptr",
                    "typeString": "struct StakingApp.ethAndTime"
                  }
                },
                "id": 1059,
                "nodeType": "ArrayTypeName",
                "src": "655:12:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_ptr",
                  "typeString": "struct StakingApp.ethAndTime[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dff83d75",
            "id": 1065,
            "mutability": "mutable",
            "name": "amountPayable",
            "nameLocation": "726:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "694:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1064,
              "keyType": {
                "id": 1062,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "702:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "694:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1063,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "713:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "782:70:6",
              "statements": [
                {
                  "expression": {
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1071,
                      "name": "rwrdToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1020,
                      "src": "793:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWRDToken_$1008",
                        "typeString": "contract RWRDToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1072,
                      "name": "_rwrdToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "805:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWRDToken_$1008",
                        "typeString": "contract RWRDToken"
                      }
                    },
                    "src": "793:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWRDToken_$1008",
                      "typeString": "contract RWRDToken"
                    }
                  },
                  "id": 1074,
                  "nodeType": "ExpressionStatement",
                  "src": "793:22:6"
                },
                {
                  "expression": {
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1075,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "826:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1076,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "834:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "834:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "826:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "826:18:6"
                }
              ]
            },
            "id": 1081,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "_rwrdToken",
                  "nameLocation": "770:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "760:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RWRDToken_$1008",
                    "typeString": "contract RWRDToken"
                  },
                  "typeName": {
                    "id": 1067,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1066,
                      "name": "RWRDToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1008,
                      "src": "760:9:6"
                    },
                    "referencedDeclaration": 1008,
                    "src": "760:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWRDToken_$1008",
                      "typeString": "contract RWRDToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "759:22:6"
            },
            "returnParameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:0:6"
            },
            "scope": 1403,
            "src": "748:104:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1090,
              "nodeType": "Block",
              "src": "895:45:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1087,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "926:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1084,
                        "name": "rwrdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "906:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RWRDToken_$1008",
                          "typeString": "contract RWRDToken"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "906:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "906:26:6"
                }
              ]
            },
            "functionSelector": "a9bfe5c7",
            "id": 1091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "TokenBalance",
            "nameLocation": "869:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:2:6"
            },
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:0:6"
            },
            "scope": 1403,
            "src": "860:80:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1139,
              "nodeType": "Block",
              "src": "995:306:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1097,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1016:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1016:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1099,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "1029:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1016:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1008:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:29:6"
                },
                {
                  "expression": {
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1103,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "1048:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1104,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1058:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1058:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1048:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "1048:19:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1114,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1120:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1120:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 1116,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "1131:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1131:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1113,
                          "name": "ethAndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1055,
                          "src": "1109:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ethAndTime_$1055_storage_ptr_$",
                            "typeString": "type(struct StakingApp.ethAndTime storage pointer)"
                          }
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1109:38:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ethAndTime_$1055_memory_ptr",
                          "typeString": "struct StakingApp.ethAndTime memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ethAndTime_$1055_memory_ptr",
                          "typeString": "struct StakingApp.ethAndTime memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1108,
                          "name": "ethBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "1080:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                          }
                        },
                        "id": 1111,
                        "indexExpression": {
                          "expression": {
                            "id": 1109,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1092:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1092:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1080:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1080:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_ptr_$_t_struct$_ethAndTime_$1055_storage_$returns$__$bound_to$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct StakingApp.ethAndTime storage ref[] storage pointer,struct StakingApp.ethAndTime storage ref)"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:68:6"
                },
                {
                  "assignments": [
                    1122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "momentStaked",
                      "nameLocation": "1166:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1139,
                      "src": "1161:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1121,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1161:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1125,
                  "initialValue": {
                    "expression": {
                      "id": 1123,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "1181:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "1181:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1161:35:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1220:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1220:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1129,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "1232:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1130,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "1239:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1131,
                            "name": "ethBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1061,
                            "src": "1248:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                            }
                          },
                          "id": 1134,
                          "indexExpression": {
                            "expression": {
                              "id": 1132,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1260:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1260:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1248:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                            "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                          }
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1248:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1136,
                        "name": "momentStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "1280:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1126,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "1214:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1138,
                  "nodeType": "EmitStatement",
                  "src": "1209:84:6"
                }
              ]
            },
            "functionSelector": "6ecc20da",
            "id": 1140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeETH",
            "nameLocation": "957:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "971:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "966:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:14:6"
            },
            "returnParameters": {
              "id": 1095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:0:6"
            },
            "scope": 1403,
            "src": "948:353:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1272,
              "nodeType": "Block",
              "src": "1340:935:6",
              "statements": [
                {
                  "assignments": [
                    1144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1144,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nameLocation": "1358:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1272,
                      "src": "1353:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1143,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1353:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1145,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1353:19:6"
                },
                {
                  "body": {
                    "id": 1172,
                    "nodeType": "Block",
                    "src": "1441:97:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1160,
                            "name": "currentBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1144,
                            "src": "1456:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1161,
                              "name": "currentBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1144,
                              "src": "1473:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1162,
                                    "name": "ethBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1061,
                                    "src": "1490:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 1165,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1163,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1502:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1502:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1490:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                    "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                  }
                                },
                                "id": 1167,
                                "indexExpression": {
                                  "id": 1166,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1147,
                                  "src": "1514:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1490:26:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                  "typeString": "struct StakingApp.ethAndTime storage ref"
                                }
                              },
                              "id": 1168,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amountEth",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1052,
                              "src": "1490:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1473:53:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1456:70:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1171,
                        "nodeType": "ExpressionStatement",
                        "src": "1456:70:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1150,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "1401:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1151,
                          "name": "ethBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "1405:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                          }
                        },
                        "id": 1154,
                        "indexExpression": {
                          "expression": {
                            "id": 1152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1417:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1417:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1405:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                        }
                      },
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1405:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1401:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1173,
                  "initializationExpression": {
                    "assignments": [
                      1147
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1147,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1394:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "1389:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1146,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1389:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1149,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1398:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1389:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1437:3:6",
                      "subExpression": {
                        "id": 1157,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "1437:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1159,
                    "nodeType": "ExpressionStatement",
                    "src": "1437:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "1385:153:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1175,
                          "name": "currentBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "1558:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1575:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1558:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7374616b696e672062616c616e63652063616e6e6f742062652030",
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1578:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                          "typeString": "literal_string \"staking balance cannot be 0\""
                        },
                        "value": "staking balance cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                          "typeString": "literal_string \"staking balance cannot be 0\""
                        }
                      ],
                      "id": 1174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1550:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1180,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:58:6"
                },
                {
                  "assignments": [
                    1182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1182,
                      "mutability": "mutable",
                      "name": "ethAvaiable",
                      "nameLocation": "1626:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1272,
                      "src": "1621:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1181,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1621:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1183,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1621:16:6"
                },
                {
                  "assignments": [
                    1185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1185,
                      "mutability": "mutable",
                      "name": "ethStillStaked",
                      "nameLocation": "1653:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1272,
                      "src": "1648:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1184,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1648:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1186,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1648:19:6"
                },
                {
                  "body": {
                    "id": 1247,
                    "nodeType": "Block",
                    "src": "1736:346:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1201,
                                  "name": "ethBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1061,
                                  "src": "1754:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                  }
                                },
                                "id": 1204,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1202,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1766:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1766:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1754:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                  "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                }
                              },
                              "id": 1206,
                              "indexExpression": {
                                "id": 1205,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1188,
                                "src": "1778:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1754:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                "typeString": "struct StakingApp.ethAndTime storage ref"
                              }
                            },
                            "id": 1207,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timeStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1054,
                            "src": "1754:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "37",
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1794:6:6",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_604800_by_1",
                              "typeString": "int_const 604800"
                            },
                            "value": "7"
                          },
                          "src": "1754:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1245,
                          "nodeType": "Block",
                          "src": "1966:105:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1233,
                                  "name": "ethStillStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1185,
                                  "src": "1985:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1234,
                                    "name": "ethStillStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1185,
                                    "src": "2002:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1235,
                                          "name": "ethBalances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1061,
                                          "src": "2019:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1238,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 1236,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2031:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1237,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2031:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2019:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1240,
                                      "indexExpression": {
                                        "id": 1239,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1188,
                                        "src": "2043:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2019:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref"
                                      }
                                    },
                                    "id": 1241,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amountEth",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1052,
                                    "src": "2019:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2002:53:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1985:70:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1244,
                              "nodeType": "ExpressionStatement",
                              "src": "1985:70:6"
                            }
                          ]
                        },
                        "id": 1246,
                        "nodeType": "IfStatement",
                        "src": "1751:320:6",
                        "trueBody": {
                          "id": 1232,
                          "nodeType": "Block",
                          "src": "1802:158:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1210,
                                  "name": "ethAvaiable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1182,
                                  "src": "1821:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1211,
                                    "name": "ethAvaiable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1182,
                                    "src": "1835:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1212,
                                          "name": "ethBalances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1061,
                                          "src": "1849:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1215,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 1213,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "1861:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1214,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "1861:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1849:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1217,
                                      "indexExpression": {
                                        "id": 1216,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1188,
                                        "src": "1873:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1849:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref"
                                      }
                                    },
                                    "id": 1218,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amountEth",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1052,
                                    "src": "1849:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1835:50:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1821:64:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1221,
                              "nodeType": "ExpressionStatement",
                              "src": "1821:64:6"
                            },
                            {
                              "expression": {
                                "id": 1230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1222,
                                        "name": "ethBalances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1061,
                                        "src": "1904:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 1226,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 1223,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "1916:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1224,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1916:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1904:23:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1227,
                                    "indexExpression": {
                                      "id": 1225,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1188,
                                      "src": "1928:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1904:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                      "typeString": "struct StakingApp.ethAndTime storage ref"
                                    }
                                  },
                                  "id": 1228,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amountEth",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1052,
                                  "src": "1904:36:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1943:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1904:40:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1231,
                              "nodeType": "ExpressionStatement",
                              "src": "1904:40:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1191,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1188,
                      "src": "1696:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1192,
                          "name": "ethBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "1700:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                          }
                        },
                        "id": 1195,
                        "indexExpression": {
                          "expression": {
                            "id": 1193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1712:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1712:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1700:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1700:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1696:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1248,
                  "initializationExpression": {
                    "assignments": [
                      1188
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1188,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1689:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1248,
                        "src": "1684:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1190,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1693:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1684:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1732:3:6",
                      "subExpression": {
                        "id": 1198,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1188,
                        "src": "1732:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1200,
                    "nodeType": "ExpressionStatement",
                    "src": "1732:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "1680:402:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1250,
                          "name": "ethAvaiable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1182,
                          "src": "2102:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2116:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2102:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20756e6c6f636b65642062616c616e636520796574",
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2119:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae",
                          "typeString": "literal_string \"no unlocked balance yet\""
                        },
                        "value": "no unlocked balance yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae",
                          "typeString": "literal_string \"no unlocked balance yet\""
                        }
                      ],
                      "id": 1249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2094:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1255,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1261,
                        "name": "ethAvaiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "2182:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1258,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1017,
                            "src": "2166:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2158:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2158:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2158:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2158:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:36:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1265,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "2220:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1266,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2227:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2227:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1268,
                        "name": "ethAvaiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "2239:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1269,
                        "name": "ethStillStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "2252:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1264,
                      "name": "Unstake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "2212:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2212:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "EmitStatement",
                  "src": "2207:60:6"
                }
              ]
            },
            "functionSelector": "a8577059",
            "id": 1273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeETH",
            "nameLocation": "1320:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:6"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:0:6"
            },
            "scope": 1403,
            "src": "1311:964:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "2313:720:6",
              "statements": [
                {
                  "body": {
                    "id": 1361,
                    "nodeType": "Block",
                    "src": "2382:390:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1290,
                                          "name": "ethBalances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1061,
                                          "src": "2401:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1293,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 1291,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2413:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1292,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2413:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2401:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1295,
                                      "indexExpression": {
                                        "id": 1294,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1277,
                                        "src": "2425:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2401:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref"
                                      }
                                    },
                                    "id": 1296,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amountEth",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1052,
                                    "src": "2401:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "hexValue": "31",
                                        "id": 1297,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2441:7:6",
                                        "subdenomination": "ether",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                          "typeString": "int_const 1000000000000000000"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "id": 1298,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2440:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    }
                                  },
                                  "src": "2401:48:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1300,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2400:50:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1301,
                                          "name": "ethBalances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1061,
                                          "src": "2454:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1304,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 1302,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2466:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1303,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2466:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2454:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1306,
                                      "indexExpression": {
                                        "id": 1305,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1277,
                                        "src": "2478:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2454:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref"
                                      }
                                    },
                                    "id": 1307,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeStaked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1054,
                                    "src": "2454:37:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "3836343030",
                                    "id": 1308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2494:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "86400"
                                  },
                                  "src": "2454:45:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1310,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2453:47:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2400:100:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2503:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2400:104:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1360,
                        "nodeType": "IfStatement",
                        "src": "2397:364:6",
                        "trueBody": {
                          "id": 1359,
                          "nodeType": "Block",
                          "src": "2505:256:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1314,
                                    "name": "amountPayable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1065,
                                    "src": "2524:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1317,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1315,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2538:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2538:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2524:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1318,
                                      "name": "amountPayable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "2552:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1321,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1319,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "2566:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1320,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "2566:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2552:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1345,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1343,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1331,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 1322,
                                                    "name": "ethBalances",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1061,
                                                    "src": "2581:11:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                                      "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                                    }
                                                  },
                                                  "id": 1325,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 1323,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "2593:3:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 1324,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2593:10:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "2581:23:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                                    "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1327,
                                                "indexExpression": {
                                                  "id": 1326,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1277,
                                                  "src": "2605:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2581:26:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                                  "typeString": "struct StakingApp.ethAndTime storage ref"
                                                }
                                              },
                                              "id": 1328,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "amountEth",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1052,
                                              "src": "2581:36:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "hexValue": "31",
                                                  "id": 1329,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "2621:7:6",
                                                  "subdenomination": "ether",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                  },
                                                  "value": "1"
                                                }
                                              ],
                                              "id": 1330,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "2620:9:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                              }
                                            },
                                            "src": "2581:48:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1332,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2580:50:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1341,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 1333,
                                                    "name": "ethBalances",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1061,
                                                    "src": "2634:11:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                                      "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                                    }
                                                  },
                                                  "id": 1336,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 1334,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "2646:3:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 1335,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2646:10:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "2634:23:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                                    "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1338,
                                                "indexExpression": {
                                                  "id": 1337,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1277,
                                                  "src": "2658:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2634:26:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                                  "typeString": "struct StakingApp.ethAndTime storage ref"
                                                }
                                              },
                                              "id": 1339,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timeStaked",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1054,
                                              "src": "2634:37:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "hexValue": "3836343030",
                                              "id": 1340,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2674:5:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_86400_by_1",
                                                "typeString": "int_const 86400"
                                              },
                                              "value": "86400"
                                            },
                                            "src": "2634:45:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1342,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2633:47:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2580:100:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "3130",
                                      "id": 1344,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2683:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "2580:105:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2552:133:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2524:161:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1348,
                              "nodeType": "ExpressionStatement",
                              "src": "2524:161:6"
                            },
                            {
                              "expression": {
                                "id": 1357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1349,
                                        "name": "ethBalances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1061,
                                        "src": "2704:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 1353,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 1350,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "2716:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1351,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2716:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2704:23:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1354,
                                    "indexExpression": {
                                      "id": 1352,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1277,
                                      "src": "2728:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2704:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                      "typeString": "struct StakingApp.ethAndTime storage ref"
                                    }
                                  },
                                  "id": 1355,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "timeStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1054,
                                  "src": "2704:37:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2744:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2704:41:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1358,
                              "nodeType": "ExpressionStatement",
                              "src": "2704:41:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1280,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "2342:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1281,
                          "name": "ethBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "2346:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                          }
                        },
                        "id": 1284,
                        "indexExpression": {
                          "expression": {
                            "id": 1282,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2358:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2358:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2346:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                        }
                      },
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2346:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2342:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1362,
                  "initializationExpression": {
                    "assignments": [
                      1277
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2335:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1362,
                        "src": "2330:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1279,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2339:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2330:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2378:3:6",
                      "subExpression": {
                        "id": 1287,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "2378:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1289,
                    "nodeType": "ExpressionStatement",
                    "src": "2378:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "2326:446:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1364,
                            "name": "amountPayable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "2792:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1367,
                          "indexExpression": {
                            "expression": {
                              "id": 1365,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2806:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2806:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2792:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2820:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2792:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20546f6b656e7320746f20636c61696d",
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2823:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8",
                          "typeString": "literal_string \"No Tokens to claim\""
                        },
                        "value": "No Tokens to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8",
                          "typeString": "literal_string \"No Tokens to claim\""
                        }
                      ],
                      "id": 1363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2784:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2784:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1372,
                  "nodeType": "ExpressionStatement",
                  "src": "2784:60:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2876:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2876:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1378,
                          "name": "amountPayable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "2888:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1381,
                        "indexExpression": {
                          "expression": {
                            "id": 1379,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2902:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2902:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2888:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1373,
                        "name": "rwrdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "2857:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RWRDToken_$1008",
                          "typeString": "contract RWRDToken"
                        }
                      },
                      "id": 1375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119,
                      "src": "2857:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2857:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1383,
                  "nodeType": "ExpressionStatement",
                  "src": "2857:57:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1385,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "2938:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2945:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2945:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1388,
                          "name": "amountPayable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "2957:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1391,
                        "indexExpression": {
                          "expression": {
                            "id": 1389,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2971:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2971:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2957:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1384,
                      "name": "Claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1050,
                      "src": "2932:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2932:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1393,
                  "nodeType": "EmitStatement",
                  "src": "2927:56:6"
                },
                {
                  "expression": {
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1394,
                        "name": "amountPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "2996:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1397,
                      "indexExpression": {
                        "expression": {
                          "id": 1395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3010:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3010:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2996:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3024:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2996:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1400,
                  "nodeType": "ExpressionStatement",
                  "src": "2996:29:6"
                }
              ]
            },
            "functionSelector": "48c54b9d",
            "id": 1402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTokens",
            "nameLocation": "2292:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2303:2:6"
            },
            "returnParameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2313:0:6"
            },
            "scope": 1403,
            "src": "2283:750:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1404,
        "src": "148:2890:6",
        "usedErrors": []
      }
    ],
    "src": "33:3007:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/StakingApp.sol",
    "exportedSymbols": {
      "Context": [
        670
      ],
      "ERC20": [
        545
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "RWRDToken": [
        1008
      ],
      "SafeMath": [
        982
      ],
      "StakingApp": [
        1403
      ]
    },
    "id": 1404,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1010,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "project:/contracts/RWRDToken.sol",
        "file": "./RWRDToken.sol",
        "id": 1011,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1404,
        "sourceUnit": 1009,
        "src": "60:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1012,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1404,
        "sourceUnit": 983,
        "src": "87:57:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "StakingApp",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1403,
        "linearizedBaseContracts": [
          1403
        ],
        "name": "StakingApp",
        "nameLocation": "157:10:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 1015,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "189:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "175:39:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1013,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "175:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "5374616b696e6720436f6e7472616374",
              "id": 1014,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "196:18:6",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_28df65e3e787da752d78d981344a2b93809a4a4e1466ab7303e44c1e894c984e",
                "typeString": "literal_string \"Staking Contract\""
              },
              "value": "Staking Contract"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 1017,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "236:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "221:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1016,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "221:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7fc3e6b2",
            "id": 1020,
            "mutability": "mutable",
            "name": "rwrdToken",
            "nameLocation": "265:9:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "248:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_RWRDToken_$1008",
              "typeString": "contract RWRDToken"
            },
            "typeName": {
              "id": 1019,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1018,
                "name": "RWRDToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1008,
                "src": "248:9:6"
              },
              "referencedDeclaration": 1008,
              "src": "248:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RWRDToken_$1008",
                "typeString": "contract RWRDToken"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 1032,
            "name": "Stake",
            "nameLocation": "287:5:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "309:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "293:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "323:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "315:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1026,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "335:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "327:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "327:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1028,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stakingSlot",
                  "nameLocation": "350:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "342:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1030,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "momentStaked",
                  "nameLocation": "371:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1032,
                  "src": "363:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "292:92:6"
            },
            "src": "281:104:6"
          },
          {
            "anonymous": false,
            "id": 1042,
            "name": "Unstake",
            "nameLocation": "397:7:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "413:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "405:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1036,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "435:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "419:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1038,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "447:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "439:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1040,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "lockedBalance",
                  "nameLocation": "462:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1042,
                  "src": "454:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1039,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "404:72:6"
            },
            "src": "391:86:6"
          },
          {
            "anonymous": false,
            "id": 1050,
            "name": "Claim",
            "nameLocation": "489:5:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1044,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "503:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "495:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1046,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "525:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "509:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "509:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1048,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "537:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "529:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "529:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "494:49:6"
            },
            "src": "483:61:6"
          },
          {
            "canonicalName": "StakingApp.ethAndTime",
            "id": 1055,
            "members": [
              {
                "constant": false,
                "id": 1052,
                "mutability": "mutable",
                "name": "amountEth",
                "nameLocation": "586:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 1055,
                "src": "581:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1051,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "581:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1054,
                "mutability": "mutable",
                "name": "timeStaked",
                "nameLocation": "611:10:6",
                "nodeType": "VariableDeclaration",
                "scope": 1055,
                "src": "606:15:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1053,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "606:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ethAndTime",
            "nameLocation": "559:10:6",
            "nodeType": "StructDefinition",
            "scope": 1403,
            "src": "552:77:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "facea6b1",
            "id": 1061,
            "mutability": "mutable",
            "name": "ethBalances",
            "nameLocation": "676:11:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "636:51:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct StakingApp.ethAndTime[])"
            },
            "typeName": {
              "id": 1060,
              "keyType": {
                "id": 1056,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "644:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "636:32:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct StakingApp.ethAndTime[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1058,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1057,
                    "name": "ethAndTime",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1055,
                    "src": "655:10:6"
                  },
                  "referencedDeclaration": 1055,
                  "src": "655:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ethAndTime_$1055_storage_ptr",
                    "typeString": "struct StakingApp.ethAndTime"
                  }
                },
                "id": 1059,
                "nodeType": "ArrayTypeName",
                "src": "655:12:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_ptr",
                  "typeString": "struct StakingApp.ethAndTime[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dff83d75",
            "id": 1065,
            "mutability": "mutable",
            "name": "amountPayable",
            "nameLocation": "726:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 1403,
            "src": "694:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1064,
              "keyType": {
                "id": 1062,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "702:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "694:24:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1063,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "713:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1080,
              "nodeType": "Block",
              "src": "782:70:6",
              "statements": [
                {
                  "expression": {
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1071,
                      "name": "rwrdToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1020,
                      "src": "793:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWRDToken_$1008",
                        "typeString": "contract RWRDToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1072,
                      "name": "_rwrdToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1068,
                      "src": "805:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_RWRDToken_$1008",
                        "typeString": "contract RWRDToken"
                      }
                    },
                    "src": "793:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWRDToken_$1008",
                      "typeString": "contract RWRDToken"
                    }
                  },
                  "id": 1074,
                  "nodeType": "ExpressionStatement",
                  "src": "793:22:6"
                },
                {
                  "expression": {
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1075,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1017,
                      "src": "826:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1076,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "834:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "834:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "826:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "826:18:6"
                }
              ]
            },
            "id": 1081,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1068,
                  "mutability": "mutable",
                  "name": "_rwrdToken",
                  "nameLocation": "770:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1081,
                  "src": "760:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_RWRDToken_$1008",
                    "typeString": "contract RWRDToken"
                  },
                  "typeName": {
                    "id": 1067,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1066,
                      "name": "RWRDToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1008,
                      "src": "760:9:6"
                    },
                    "referencedDeclaration": 1008,
                    "src": "760:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_RWRDToken_$1008",
                      "typeString": "contract RWRDToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "759:22:6"
            },
            "returnParameters": {
              "id": 1070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:0:6"
            },
            "scope": 1403,
            "src": "748:104:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1090,
              "nodeType": "Block",
              "src": "895:45:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1087,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "926:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1084,
                        "name": "rwrdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "906:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RWRDToken_$1008",
                          "typeString": "contract RWRDToken"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 98,
                      "src": "906:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:26:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1089,
                  "nodeType": "ExpressionStatement",
                  "src": "906:26:6"
                }
              ]
            },
            "functionSelector": "a9bfe5c7",
            "id": 1091,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "TokenBalance",
            "nameLocation": "869:12:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:2:6"
            },
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:0:6"
            },
            "scope": 1403,
            "src": "860:80:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1139,
              "nodeType": "Block",
              "src": "995:306:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1097,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1016:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1016:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1099,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "1029:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1016:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1096,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1008:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1102,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:29:6"
                },
                {
                  "expression": {
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1103,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1093,
                      "src": "1048:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1104,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1058:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1058:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1048:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "1048:19:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1114,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1120:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1120:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 1116,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "1131:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1131:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1113,
                          "name": "ethAndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1055,
                          "src": "1109:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_ethAndTime_$1055_storage_ptr_$",
                            "typeString": "type(struct StakingApp.ethAndTime storage pointer)"
                          }
                        },
                        "id": 1118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1109:38:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ethAndTime_$1055_memory_ptr",
                          "typeString": "struct StakingApp.ethAndTime memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ethAndTime_$1055_memory_ptr",
                          "typeString": "struct StakingApp.ethAndTime memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1108,
                          "name": "ethBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "1080:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                          }
                        },
                        "id": 1111,
                        "indexExpression": {
                          "expression": {
                            "id": 1109,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1092:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1092:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1080:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1080:28:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_ptr_$_t_struct$_ethAndTime_$1055_storage_$returns$__$bound_to$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct StakingApp.ethAndTime storage ref[] storage pointer,struct StakingApp.ethAndTime storage ref)"
                      }
                    },
                    "id": 1119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:68:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1120,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:68:6"
                },
                {
                  "assignments": [
                    1122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1122,
                      "mutability": "mutable",
                      "name": "momentStaked",
                      "nameLocation": "1166:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1139,
                      "src": "1161:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1121,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1161:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1125,
                  "initialValue": {
                    "expression": {
                      "id": 1123,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "1181:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "1181:15:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1161:35:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1127,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1220:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1220:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1129,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "1232:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1130,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "1239:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1131,
                            "name": "ethBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1061,
                            "src": "1248:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                              "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                            }
                          },
                          "id": 1134,
                          "indexExpression": {
                            "expression": {
                              "id": 1132,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1260:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1260:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1248:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                            "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                          }
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1248:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1136,
                        "name": "momentStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1122,
                        "src": "1280:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1126,
                      "name": "Stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "1214:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1214:79:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1138,
                  "nodeType": "EmitStatement",
                  "src": "1209:84:6"
                }
              ]
            },
            "functionSelector": "6ecc20da",
            "id": 1140,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeETH",
            "nameLocation": "957:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1093,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "971:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1140,
                  "src": "966:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1092,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:14:6"
            },
            "returnParameters": {
              "id": 1095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "995:0:6"
            },
            "scope": 1403,
            "src": "948:353:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1272,
              "nodeType": "Block",
              "src": "1340:935:6",
              "statements": [
                {
                  "assignments": [
                    1144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1144,
                      "mutability": "mutable",
                      "name": "currentBalance",
                      "nameLocation": "1358:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1272,
                      "src": "1353:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1143,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1353:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1145,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1353:19:6"
                },
                {
                  "body": {
                    "id": 1172,
                    "nodeType": "Block",
                    "src": "1441:97:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1160,
                            "name": "currentBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1144,
                            "src": "1456:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1161,
                              "name": "currentBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1144,
                              "src": "1473:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1162,
                                    "name": "ethBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1061,
                                    "src": "1490:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                      "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 1165,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1163,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "1502:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1164,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "1502:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1490:23:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                    "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                  }
                                },
                                "id": 1167,
                                "indexExpression": {
                                  "id": 1166,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1147,
                                  "src": "1514:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1490:26:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                  "typeString": "struct StakingApp.ethAndTime storage ref"
                                }
                              },
                              "id": 1168,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amountEth",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1052,
                              "src": "1490:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1473:53:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1456:70:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1171,
                        "nodeType": "ExpressionStatement",
                        "src": "1456:70:6"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1150,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1147,
                      "src": "1401:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1151,
                          "name": "ethBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "1405:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                          }
                        },
                        "id": 1154,
                        "indexExpression": {
                          "expression": {
                            "id": 1152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1417:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1417:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1405:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                        }
                      },
                      "id": 1155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1405:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1401:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1173,
                  "initializationExpression": {
                    "assignments": [
                      1147
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1147,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1394:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "1389:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1146,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1389:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1149,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1398:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1389:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1437:3:6",
                      "subExpression": {
                        "id": 1157,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1147,
                        "src": "1437:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1159,
                    "nodeType": "ExpressionStatement",
                    "src": "1437:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "1385:153:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1175,
                          "name": "currentBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "1558:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1575:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1558:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7374616b696e672062616c616e63652063616e6e6f742062652030",
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1578:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                          "typeString": "literal_string \"staking balance cannot be 0\""
                        },
                        "value": "staking balance cannot be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_564d3fe55b23d6db5b6b33df6e8e64dfe96fa04d11a1c5cf5d443beb55d42fba",
                          "typeString": "literal_string \"staking balance cannot be 0\""
                        }
                      ],
                      "id": 1174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1550:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1550:58:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1180,
                  "nodeType": "ExpressionStatement",
                  "src": "1550:58:6"
                },
                {
                  "assignments": [
                    1182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1182,
                      "mutability": "mutable",
                      "name": "ethAvaiable",
                      "nameLocation": "1626:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1272,
                      "src": "1621:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1181,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1621:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1183,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1621:16:6"
                },
                {
                  "assignments": [
                    1185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1185,
                      "mutability": "mutable",
                      "name": "ethStillStaked",
                      "nameLocation": "1653:14:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1272,
                      "src": "1648:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1184,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1648:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1186,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1648:19:6"
                },
                {
                  "body": {
                    "id": 1247,
                    "nodeType": "Block",
                    "src": "1736:346:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 1201,
                                  "name": "ethBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1061,
                                  "src": "1754:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                    "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                  }
                                },
                                "id": 1204,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1202,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "1766:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1766:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1754:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                  "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                }
                              },
                              "id": 1206,
                              "indexExpression": {
                                "id": 1205,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1188,
                                "src": "1778:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1754:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                "typeString": "struct StakingApp.ethAndTime storage ref"
                              }
                            },
                            "id": 1207,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timeStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1054,
                            "src": "1754:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "37",
                            "id": 1208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1794:6:6",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_604800_by_1",
                              "typeString": "int_const 604800"
                            },
                            "value": "7"
                          },
                          "src": "1754:46:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1245,
                          "nodeType": "Block",
                          "src": "1966:105:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1233,
                                  "name": "ethStillStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1185,
                                  "src": "1985:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1234,
                                    "name": "ethStillStaked",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1185,
                                    "src": "2002:14:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1235,
                                          "name": "ethBalances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1061,
                                          "src": "2019:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1238,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 1236,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2031:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1237,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2031:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2019:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1240,
                                      "indexExpression": {
                                        "id": 1239,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1188,
                                        "src": "2043:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2019:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref"
                                      }
                                    },
                                    "id": 1241,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amountEth",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1052,
                                    "src": "2019:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2002:53:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1985:70:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1244,
                              "nodeType": "ExpressionStatement",
                              "src": "1985:70:6"
                            }
                          ]
                        },
                        "id": 1246,
                        "nodeType": "IfStatement",
                        "src": "1751:320:6",
                        "trueBody": {
                          "id": 1232,
                          "nodeType": "Block",
                          "src": "1802:158:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1210,
                                  "name": "ethAvaiable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1182,
                                  "src": "1821:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1219,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1211,
                                    "name": "ethAvaiable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1182,
                                    "src": "1835:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1212,
                                          "name": "ethBalances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1061,
                                          "src": "1849:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1215,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 1213,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "1861:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1214,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "1861:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1849:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1217,
                                      "indexExpression": {
                                        "id": 1216,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1188,
                                        "src": "1873:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1849:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref"
                                      }
                                    },
                                    "id": 1218,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amountEth",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1052,
                                    "src": "1849:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1835:50:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1821:64:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1221,
                              "nodeType": "ExpressionStatement",
                              "src": "1821:64:6"
                            },
                            {
                              "expression": {
                                "id": 1230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1222,
                                        "name": "ethBalances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1061,
                                        "src": "1904:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 1226,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 1223,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "1916:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1224,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "1916:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1904:23:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1227,
                                    "indexExpression": {
                                      "id": 1225,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1188,
                                      "src": "1928:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1904:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                      "typeString": "struct StakingApp.ethAndTime storage ref"
                                    }
                                  },
                                  "id": 1228,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "amountEth",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1052,
                                  "src": "1904:36:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1943:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1904:40:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1231,
                              "nodeType": "ExpressionStatement",
                              "src": "1904:40:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1191,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1188,
                      "src": "1696:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1192,
                          "name": "ethBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "1700:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                          }
                        },
                        "id": 1195,
                        "indexExpression": {
                          "expression": {
                            "id": 1193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1712:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1712:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1700:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                        }
                      },
                      "id": 1196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1700:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1696:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1248,
                  "initializationExpression": {
                    "assignments": [
                      1188
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1188,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1689:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1248,
                        "src": "1684:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1190,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1693:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1684:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1732:3:6",
                      "subExpression": {
                        "id": 1198,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1188,
                        "src": "1732:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1200,
                    "nodeType": "ExpressionStatement",
                    "src": "1732:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "1680:402:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1250,
                          "name": "ethAvaiable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1182,
                          "src": "2102:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2116:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2102:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f20756e6c6f636b65642062616c616e636520796574",
                        "id": 1253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2119:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae",
                          "typeString": "literal_string \"no unlocked balance yet\""
                        },
                        "value": "no unlocked balance yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d976a7bb43cb1a5a3a570c208981db14d9feb401ebba21e0ffb1a30c6642abae",
                          "typeString": "literal_string \"no unlocked balance yet\""
                        }
                      ],
                      "id": 1249,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2094:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2094:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1255,
                  "nodeType": "ExpressionStatement",
                  "src": "2094:51:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1261,
                        "name": "ethAvaiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "2182:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1258,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1017,
                            "src": "2166:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2158:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2158:8:6",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2158:14:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2158:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2158:36:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1263,
                  "nodeType": "ExpressionStatement",
                  "src": "2158:36:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1265,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "2220:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1266,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2227:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2227:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1268,
                        "name": "ethAvaiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1182,
                        "src": "2239:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1269,
                        "name": "ethStillStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "2252:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1264,
                      "name": "Unstake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1042,
                      "src": "2212:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2212:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "EmitStatement",
                  "src": "2207:60:6"
                }
              ]
            },
            "functionSelector": "a8577059",
            "id": 1273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeETH",
            "nameLocation": "1320:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:2:6"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1340:0:6"
            },
            "scope": 1403,
            "src": "1311:964:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1401,
              "nodeType": "Block",
              "src": "2313:720:6",
              "statements": [
                {
                  "body": {
                    "id": 1361,
                    "nodeType": "Block",
                    "src": "2382:390:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1290,
                                          "name": "ethBalances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1061,
                                          "src": "2401:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1293,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 1291,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2413:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1292,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2413:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2401:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1295,
                                      "indexExpression": {
                                        "id": 1294,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1277,
                                        "src": "2425:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2401:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref"
                                      }
                                    },
                                    "id": 1296,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amountEth",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1052,
                                    "src": "2401:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "hexValue": "31",
                                        "id": 1297,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2441:7:6",
                                        "subdenomination": "ether",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                          "typeString": "int_const 1000000000000000000"
                                        },
                                        "value": "1"
                                      }
                                    ],
                                    "id": 1298,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "2440:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    }
                                  },
                                  "src": "2401:48:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1300,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2400:50:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "baseExpression": {
                                          "id": 1301,
                                          "name": "ethBalances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1061,
                                          "src": "2454:11:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                          }
                                        },
                                        "id": 1304,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 1302,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "2466:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1303,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "2466:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2454:23:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1306,
                                      "indexExpression": {
                                        "id": 1305,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1277,
                                        "src": "2478:1:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2454:26:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref"
                                      }
                                    },
                                    "id": 1307,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timeStaked",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1054,
                                    "src": "2454:37:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "hexValue": "3836343030",
                                    "id": 1308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2494:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_86400_by_1",
                                      "typeString": "int_const 86400"
                                    },
                                    "value": "86400"
                                  },
                                  "src": "2454:45:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1310,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2453:47:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2400:100:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2503:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2400:104:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1360,
                        "nodeType": "IfStatement",
                        "src": "2397:364:6",
                        "trueBody": {
                          "id": 1359,
                          "nodeType": "Block",
                          "src": "2505:256:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1314,
                                    "name": "amountPayable",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1065,
                                    "src": "2524:13:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1317,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1315,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2538:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2538:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2524:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1318,
                                      "name": "amountPayable",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1065,
                                      "src": "2552:13:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                        "typeString": "mapping(address => uint256)"
                                      }
                                    },
                                    "id": 1321,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 1319,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "2566:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1320,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "2566:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2552:25:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1345,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1343,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1331,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 1322,
                                                    "name": "ethBalances",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1061,
                                                    "src": "2581:11:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                                      "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                                    }
                                                  },
                                                  "id": 1325,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 1323,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "2593:3:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 1324,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2593:10:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "2581:23:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                                    "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1327,
                                                "indexExpression": {
                                                  "id": 1326,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1277,
                                                  "src": "2605:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2581:26:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                                  "typeString": "struct StakingApp.ethAndTime storage ref"
                                                }
                                              },
                                              "id": 1328,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "amountEth",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1052,
                                              "src": "2581:36:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "hexValue": "31",
                                                  "id": 1329,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "2621:7:6",
                                                  "subdenomination": "ether",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                  },
                                                  "value": "1"
                                                }
                                              ],
                                              "id": 1330,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "2620:9:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                "typeString": "int_const 1000000000000000000"
                                              }
                                            },
                                            "src": "2581:48:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1332,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2580:50:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1341,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "baseExpression": {
                                                    "id": 1333,
                                                    "name": "ethBalances",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1061,
                                                    "src": "2634:11:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                                      "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                                    }
                                                  },
                                                  "id": 1336,
                                                  "indexExpression": {
                                                    "expression": {
                                                      "id": 1334,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 4294967281,
                                                      "src": "2646:3:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 1335,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2646:10:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "2634:23:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                                    "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                                  }
                                                },
                                                "id": 1338,
                                                "indexExpression": {
                                                  "id": 1337,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1277,
                                                  "src": "2658:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2634:26:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                                  "typeString": "struct StakingApp.ethAndTime storage ref"
                                                }
                                              },
                                              "id": 1339,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "timeStaked",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1054,
                                              "src": "2634:37:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "/",
                                            "rightExpression": {
                                              "hexValue": "3836343030",
                                              "id": 1340,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2674:5:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_86400_by_1",
                                                "typeString": "int_const 86400"
                                              },
                                              "value": "86400"
                                            },
                                            "src": "2634:45:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1342,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2633:47:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2580:100:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "hexValue": "3130",
                                      "id": 1344,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2683:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "2580:105:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2552:133:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2524:161:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1348,
                              "nodeType": "ExpressionStatement",
                              "src": "2524:161:6"
                            },
                            {
                              "expression": {
                                "id": 1357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 1349,
                                        "name": "ethBalances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1061,
                                        "src": "2704:11:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 1353,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 1350,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967281,
                                          "src": "2716:3:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1351,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2716:10:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2704:23:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                                        "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1354,
                                    "indexExpression": {
                                      "id": 1352,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1277,
                                      "src": "2728:1:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2704:26:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ethAndTime_$1055_storage",
                                      "typeString": "struct StakingApp.ethAndTime storage ref"
                                    }
                                  },
                                  "id": 1355,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "timeStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1054,
                                  "src": "2704:37:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2744:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2704:41:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1358,
                              "nodeType": "ExpressionStatement",
                              "src": "2704:41:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1280,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1277,
                      "src": "2342:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1281,
                          "name": "ethBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "2346:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct StakingApp.ethAndTime storage ref[] storage ref)"
                          }
                        },
                        "id": 1284,
                        "indexExpression": {
                          "expression": {
                            "id": 1282,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2358:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2358:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2346:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ethAndTime_$1055_storage_$dyn_storage",
                          "typeString": "struct StakingApp.ethAndTime storage ref[] storage ref"
                        }
                      },
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2346:30:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2342:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1362,
                  "initializationExpression": {
                    "assignments": [
                      1277
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1277,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2335:1:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1362,
                        "src": "2330:6:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1276,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2330:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1279,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2339:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2330:10:6"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2378:3:6",
                      "subExpression": {
                        "id": 1287,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1277,
                        "src": "2378:1:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1289,
                    "nodeType": "ExpressionStatement",
                    "src": "2378:3:6"
                  },
                  "nodeType": "ForStatement",
                  "src": "2326:446:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1364,
                            "name": "amountPayable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1065,
                            "src": "2792:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1367,
                          "indexExpression": {
                            "expression": {
                              "id": 1365,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2806:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2806:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2792:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2820:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2792:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20546f6b656e7320746f20636c61696d",
                        "id": 1370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2823:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8",
                          "typeString": "literal_string \"No Tokens to claim\""
                        },
                        "value": "No Tokens to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d949e3205e07a08c5c263f6080bf1e92f3d1f4b6e49e79ebc899fc218859fec8",
                          "typeString": "literal_string \"No Tokens to claim\""
                        }
                      ],
                      "id": 1363,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2784:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2784:60:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1372,
                  "nodeType": "ExpressionStatement",
                  "src": "2784:60:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2876:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2876:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1378,
                          "name": "amountPayable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "2888:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1381,
                        "indexExpression": {
                          "expression": {
                            "id": 1379,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2902:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2902:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2888:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1373,
                        "name": "rwrdToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "2857:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_RWRDToken_$1008",
                          "typeString": "contract RWRDToken"
                        }
                      },
                      "id": 1375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 119,
                      "src": "2857:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2857:57:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1383,
                  "nodeType": "ExpressionStatement",
                  "src": "2857:57:6"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1385,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1017,
                        "src": "2938:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1386,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2945:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2945:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1388,
                          "name": "amountPayable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "2957:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1391,
                        "indexExpression": {
                          "expression": {
                            "id": 1389,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2971:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2971:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2957:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1384,
                      "name": "Claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1050,
                      "src": "2932:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2932:51:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1393,
                  "nodeType": "EmitStatement",
                  "src": "2927:56:6"
                },
                {
                  "expression": {
                    "id": 1399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1394,
                        "name": "amountPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1065,
                        "src": "2996:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1397,
                      "indexExpression": {
                        "expression": {
                          "id": 1395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3010:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3010:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2996:25:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3024:1:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2996:29:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1400,
                  "nodeType": "ExpressionStatement",
                  "src": "2996:29:6"
                }
              ]
            },
            "functionSelector": "48c54b9d",
            "id": 1402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTokens",
            "nameLocation": "2292:11:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2303:2:6"
            },
            "returnParameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2313:0:6"
            },
            "scope": 1403,
            "src": "2283:750:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1404,
        "src": "148:2890:6",
        "usedErrors": []
      }
    ],
    "src": "33:3007:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xF2562c95574D2Dc10b21020C49729cEBc3f492B7",
      "transactionHash": "0x29a11c0c783a7c93452a59317aca5ee314e14e8cf43262d9582f1c5b2f664a71"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-14T11:30:43.137Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}